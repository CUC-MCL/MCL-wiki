{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MCL\u5927\u5b66\u751f\u5b66\u672f\u8bad\u7ec3\u5b63\u7b80\u4ecb \u00b6 MCL\uff08Most Creative Learning\uff09\u5927\u5b66\u751f\u5b66\u672f\u8bad\u7ec3\u5b63\u65e8\u5728\u5bf9\u6211\u6821\u7406\u5de5\u79d1\u672c\u79d1\u751f\u8fdb\u884c\u57fa\u672c\u7684\u5b66\u672f\u8bad\u7ec3\uff0c\u719f\u6089\u5b66\u672f\u7814\u7a76\u7684\u57fa\u672c\u6d41\u7a0b\u548c\u65b9\u6cd5\uff0c\u4e3a\u4eca\u540e\u4ece\u4e8b\u5b66\u672f\u7814\u7a76\u6253\u4e0b\u826f\u597d\u7684\u57fa\u7840\u3002\u8bad\u7ec3\u5b63\u4ece\u770b\u9876\u520a\u3001\u8bfb\u9876\u4f1a\u5f00\u59cb\uff0c\u540c\u5b66\u4eec\u5728\u6b64\u8fc7\u7a0b\u4e2d\u5c06\u53ca\u65f6\u7ec4\u5efa\u81ea\u8eab\u6240\u9700\u7684\u77e5\u8bc6\u4f53\u7cfb\uff0c\u6d1e\u5bdf\u5b66\u672f\u524d\u6cbf\u65b9\u5411\uff0c\u638c\u63e1\u79d1\u7814\u7684\u57fa\u672c\u65b9\u6cd5\u548c\u5b9e\u9a8c\u6570\u636e\u5206\u6790\u6280\u80fd\uff0c\u5e76\u80fd\u5728\u6b64\u57fa\u7840\u4e0a\u63d0\u5347\u81ea\u5df1\u7684\u5b66\u672f\u5199\u4f5c\u80fd\u529b\u548c\u521b\u65b0\u80fd\u529b\u3002 \u5386\u7ecf8\u4e2a\u6708\u7684\u9996\u5c4aMCL\u5927\u5b66\u751f\u5b66\u672f\u8bad\u7ec3\u5b63\u5df2\u987a\u5229\u7ed3\u675f\u3002\u81ea2021\u5e745\u6708\u5e95\u5f00\u59cb\uff0c\u5c06\u542f\u52a8\u4e3a\u671f10\u4e2a\u6708\u7684\u7b2c\u4e8c\u5c4aMCL\u5927\u5b66\u751f\u5b66\u672f\u8bad\u7ec3\u5b63\uff0c\u4e3a\u5b66\u751f\u63d0\u4f9b\u66f4\u591a\u5b66\u672f\u8bad\u7ec3\u673a\u4f1a\uff0c\u8ba9\u66f4\u591a\u540c\u5b66\u4ece\u4e2d\u53d7\u76ca\u3002 \u66f4\u6362\u4e3b\u9898\u7684\u4e3b\u8272 \u00b6 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary); }) })","title":"\u4e3b\u9875"},{"location":"#mcl","text":"MCL\uff08Most Creative Learning\uff09\u5927\u5b66\u751f\u5b66\u672f\u8bad\u7ec3\u5b63\u65e8\u5728\u5bf9\u6211\u6821\u7406\u5de5\u79d1\u672c\u79d1\u751f\u8fdb\u884c\u57fa\u672c\u7684\u5b66\u672f\u8bad\u7ec3\uff0c\u719f\u6089\u5b66\u672f\u7814\u7a76\u7684\u57fa\u672c\u6d41\u7a0b\u548c\u65b9\u6cd5\uff0c\u4e3a\u4eca\u540e\u4ece\u4e8b\u5b66\u672f\u7814\u7a76\u6253\u4e0b\u826f\u597d\u7684\u57fa\u7840\u3002\u8bad\u7ec3\u5b63\u4ece\u770b\u9876\u520a\u3001\u8bfb\u9876\u4f1a\u5f00\u59cb\uff0c\u540c\u5b66\u4eec\u5728\u6b64\u8fc7\u7a0b\u4e2d\u5c06\u53ca\u65f6\u7ec4\u5efa\u81ea\u8eab\u6240\u9700\u7684\u77e5\u8bc6\u4f53\u7cfb\uff0c\u6d1e\u5bdf\u5b66\u672f\u524d\u6cbf\u65b9\u5411\uff0c\u638c\u63e1\u79d1\u7814\u7684\u57fa\u672c\u65b9\u6cd5\u548c\u5b9e\u9a8c\u6570\u636e\u5206\u6790\u6280\u80fd\uff0c\u5e76\u80fd\u5728\u6b64\u57fa\u7840\u4e0a\u63d0\u5347\u81ea\u5df1\u7684\u5b66\u672f\u5199\u4f5c\u80fd\u529b\u548c\u521b\u65b0\u80fd\u529b\u3002 \u5386\u7ecf8\u4e2a\u6708\u7684\u9996\u5c4aMCL\u5927\u5b66\u751f\u5b66\u672f\u8bad\u7ec3\u5b63\u5df2\u987a\u5229\u7ed3\u675f\u3002\u81ea2021\u5e745\u6708\u5e95\u5f00\u59cb\uff0c\u5c06\u542f\u52a8\u4e3a\u671f10\u4e2a\u6708\u7684\u7b2c\u4e8c\u5c4aMCL\u5927\u5b66\u751f\u5b66\u672f\u8bad\u7ec3\u5b63\uff0c\u4e3a\u5b66\u751f\u63d0\u4f9b\u66f4\u591a\u5b66\u672f\u8bad\u7ec3\u673a\u4f1a\uff0c\u8ba9\u66f4\u591a\u540c\u5b66\u4ece\u4e2d\u53d7\u76ca\u3002","title":"MCL\u5927\u5b66\u751f\u5b66\u672f\u8bad\u7ec3\u5b63\u7b80\u4ecb"},{"location":"#_1","text":"Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary); }) })","title":"\u66f4\u6362\u4e3b\u9898\u7684\u4e3b\u8272"},{"location":"construct/","text":"\u5efa\u8bbe\u4e2d...... \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 _____ _____ _____ _____ _____ _____ _____ /\\ \\ /\\ \\ /\\ \\ ______ /\\ \\ /\\ \\ /\\ \\ /\\ \\ /::\\ \\ /::\\____\\ /::\\ \\ |::| | /::\\ \\ /::\\ \\ /::\\____\\ /::\\ \\ /::::\\ \\ /:::/ / \\:::\\ \\ |::| | \\:::\\ \\ /::::\\ \\ /::::| | /::::\\ \\ /::::::\\ \\ /:::/ / \\:::\\ \\ |::| | \\:::\\ \\ /::::::\\ \\ /:::::| | /::::::\\ \\ /:::/\\:::\\ \\ /:::/ / \\:::\\ \\ |::| | \\:::\\ \\ /:::/\\:::\\ \\ /::::::| | /:::/\\:::\\ \\ /:::/ \\:::\\ \\ /:::/ / \\:::\\ \\ |::| | \\:::\\ \\ /:::/__\\:::\\ \\ /:::/|::| | /:::/ \\:::\\ \\ /:::/ \\:::\\ \\ /:::/ / /::::\\ \\ |::| | /::::\\ \\ /::::\\ \\:::\\ \\ /:::/ |::| | /:::/ \\:::\\ \\ /:::/ / \\:::\\ \\ /:::/ / _____ ____ /::::::\\ \\ |::| | ____ /::::::\\ \\ /::::::\\ \\:::\\ \\ /:::/ |::| | _____ /:::/ / \\:::\\ \\ /:::/ / \\:::\\ ___\\ /:::/____/ /\\ \\ /\\ \\ /:::/\\:::\\ \\ ______|::|___|___ ____ /\\ \\ /:::/\\:::\\ \\ /:::/\\:::\\ \\:::\\ \\ /:::/ |::| |/\\ \\ /:::/ / \\:::\\ ___\\ /:::/____/ \\:::| ||:::| / /::\\____\\/::\\ \\/:::/ \\:::\\____\\|:::::::::::::::::| |/::\\ \\/:::/ \\:::\\____\\/:::/ \\:::\\ \\:::\\____\\/:: / |::| /::\\____\\/:::/____/ ___\\:::| | \\:::\\ \\ /:::|____||:::|____\\ /:::/ /\\:::\\ /:::/ \\::/ /|:::::::::::::::::|____|\\:::\\ /:::/ \\::/ /\\::/ \\:::\\ /:::/ /\\::/ /|::| /:::/ /\\:::\\ \\ /\\ /:::|____| \\:::\\ \\ /:::/ / \\:::\\ \\ /:::/ / \\:::\\/:::/ / \\/____/ ~~~~~~|::|~~~|~~~ \\:::\\/:::/ / \\/____/ \\/____/ \\:::\\/:::/ / \\/____/ |::| /:::/ / \\:::\\ /::\\ \\::/ / \\:::\\ \\ /:::/ / \\:::\\ \\ /:::/ / \\::::::/ / |::| | \\::::::/ / \\::::::/ / |::|/:::/ / \\:::\\ \\:::\\ \\/____/ \\:::\\ /:::/ / \\:::\\ /:::/ / \\::::/____/ |::| | \\::::/____/ \\::::/ / |::::::/ / \\:::\\ \\:::\\____\\ \\:::\\ /:::/ / \\:::\\__/:::/ / \\:::\\ \\ |::| | \\:::\\ \\ /:::/ / |:::::/ / \\:::\\ /:::/ / \\:::\\/:::/ / \\::::::::/ / \\:::\\ \\ |::| | \\:::\\ \\ /:::/ / |::::/ / \\:::\\/:::/ / \\::::::/ / \\::::::/ / \\:::\\ \\ |::| | \\:::\\ \\ /:::/ / /:::/ / \\::::::/ / \\::::/ / \\::::/ / \\:::\\____\\ |::| | \\:::\\____\\ /:::/ / /:::/ / \\::::/ / \\::/____/ \\::/____/ \\::/ / |::|___| \\::/ / \\::/ / \\::/ / \\::/____/ ~~ ~~ \\/____/ ~~ \\/____/ \\/____/ \\/____/ _____ _______ _____ /\\ \\ /::\\ \\ /\\ \\ /::\\____\\ /::::\\ \\ /::\\ \\ /::::| | /::::::\\ \\ \\:::\\ \\ /:::::| | /::::::::\\ \\ \\:::\\ \\ /::::::| | /:::/~~\\:::\\ \\ \\:::\\ \\ /:::/|::| | /:::/ \\:::\\ \\ \\:::\\ \\ /:::/ |::| | /:::/ / \\:::\\ \\ /::::\\ \\ /:::/ |::| | _____ /:::/____/ \\:::\\____\\ /::::::\\ \\ /:::/ |::| |/\\ \\ |:::| | |:::| | /:::/\\:::\\ \\ /:: / |::| /::\\____\\|:::|____| |:::| | /:::/ \\:::\\____\\ \\::/ /|::| /:::/ / \\:::\\ \\ /:::/ / /:::/ \\::/ / \\/____/ |::| /:::/ / \\:::\\ \\ /:::/ / /:::/ / \\/____/ |::|/:::/ / \\:::\\ /:::/ / /:::/ / |::::::/ / \\:::\\__/:::/ / /:::/ / |:::::/ / \\::::::::/ / \\::/ / |::::/ / \\::::::/ / \\/____/ /:::/ / \\::::/ / /:::/ / \\::/____/ \\::/ / ~~ \\/____/ _____ _______ _____ _____ _____ /\\ \\ /::\\ \\ /\\ \\ /\\ \\ /\\ \\ /::\\ \\ /::::\\ \\ /::\\____\\ /::\\____\\ /::\\ \\ /::::\\ \\ /::::::\\ \\ /:::/ / /::::| | /::::\\ \\ /::::::\\ \\ /::::::::\\ \\ /:::/ / /:::::| | /::::::\\ \\ /:::/\\:::\\ \\ /:::/~~\\:::\\ \\ /:::/ / /::::::| | /:::/\\:::\\ \\ /:::/__\\:::\\ \\ /:::/ \\:::\\ \\ /:::/ / /:::/|::| | /:::/ \\:::\\ \\ /::::\\ \\:::\\ \\ /:::/ / \\:::\\ \\ /:::/ / /:::/ |::| | /:::/ \\:::\\ \\ /::::::\\ \\:::\\ \\ /:::/____/ \\:::\\____\\ /:::/ / _____ /:::/ |::| | _____ /:::/ / \\:::\\ \\ /:::/\\:::\\ \\:::\\ \\ |:::| | |:::| | /:::/____/ /\\ \\ /:::/ |::| |/\\ \\ /:::/ / \\:::\\ ___\\ /:::/ \\:::\\ \\:::\\____\\|:::|____| |:::| ||:::| / /::\\____\\/:: / |::| /::\\____\\/:::/____/ \\:::| | \\::/ \\:::\\ \\::/ / \\:::\\ \\ /:::/ / |:::|____\\ /:::/ /\\::/ /|::| /:::/ /\\:::\\ \\ /:::|____| \\/____/ \\:::\\ \\/____/ \\:::\\ \\ /:::/ / \\:::\\ \\ /:::/ / \\/____/ |::| /:::/ / \\:::\\ \\ /:::/ / \\:::\\ \\ \\:::\\ /:::/ / \\:::\\ \\ /:::/ / |::|/:::/ / \\:::\\ \\ /:::/ / \\:::\\____\\ \\:::\\__/:::/ / \\:::\\ /:::/ / |::::::/ / \\:::\\ /:::/ / \\::/ / \\::::::::/ / \\:::\\__/:::/ / |:::::/ / \\:::\\ /:::/ / \\/____/ \\::::::/ / \\::::::::/ / |::::/ / \\:::\\/:::/ / \\::::/ / \\::::::/ / /:::/ / \\::::::/ / \\::/____/ \\::::/ / /:::/ / \\::::/ / ~~ \\::/____/ \\::/ / \\::/____/ ~~ \\/____/ ~~","title":"\u5176\u4ed6"},{"location":"construct/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 _____ _____ _____ _____ _____ _____ _____ /\\ \\ /\\ \\ /\\ \\ ______ /\\ \\ /\\ \\ /\\ \\ /\\ \\ /::\\ \\ /::\\____\\ /::\\ \\ |::| | /::\\ \\ /::\\ \\ /::\\____\\ /::\\ \\ /::::\\ \\ /:::/ / \\:::\\ \\ |::| | \\:::\\ \\ /::::\\ \\ /::::| | /::::\\ \\ /::::::\\ \\ /:::/ / \\:::\\ \\ |::| | \\:::\\ \\ /::::::\\ \\ /:::::| | /::::::\\ \\ /:::/\\:::\\ \\ /:::/ / \\:::\\ \\ |::| | \\:::\\ \\ /:::/\\:::\\ \\ /::::::| | /:::/\\:::\\ \\ /:::/ \\:::\\ \\ /:::/ / \\:::\\ \\ |::| | \\:::\\ \\ /:::/__\\:::\\ \\ /:::/|::| | /:::/ \\:::\\ \\ /:::/ \\:::\\ \\ /:::/ / /::::\\ \\ |::| | /::::\\ \\ /::::\\ \\:::\\ \\ /:::/ |::| | /:::/ \\:::\\ \\ /:::/ / \\:::\\ \\ /:::/ / _____ ____ /::::::\\ \\ |::| | ____ /::::::\\ \\ /::::::\\ \\:::\\ \\ /:::/ |::| | _____ /:::/ / \\:::\\ \\ /:::/ / \\:::\\ ___\\ /:::/____/ /\\ \\ /\\ \\ /:::/\\:::\\ \\ ______|::|___|___ ____ /\\ \\ /:::/\\:::\\ \\ /:::/\\:::\\ \\:::\\ \\ /:::/ |::| |/\\ \\ /:::/ / \\:::\\ ___\\ /:::/____/ \\:::| ||:::| / /::\\____\\/::\\ \\/:::/ \\:::\\____\\|:::::::::::::::::| |/::\\ \\/:::/ \\:::\\____\\/:::/ \\:::\\ \\:::\\____\\/:: / |::| /::\\____\\/:::/____/ ___\\:::| | \\:::\\ \\ /:::|____||:::|____\\ /:::/ /\\:::\\ /:::/ \\::/ /|:::::::::::::::::|____|\\:::\\ /:::/ \\::/ /\\::/ \\:::\\ /:::/ /\\::/ /|::| /:::/ /\\:::\\ \\ /\\ /:::|____| \\:::\\ \\ /:::/ / \\:::\\ \\ /:::/ / \\:::\\/:::/ / \\/____/ ~~~~~~|::|~~~|~~~ \\:::\\/:::/ / \\/____/ \\/____/ \\:::\\/:::/ / \\/____/ |::| /:::/ / \\:::\\ /::\\ \\::/ / \\:::\\ \\ /:::/ / \\:::\\ \\ /:::/ / \\::::::/ / |::| | \\::::::/ / \\::::::/ / |::|/:::/ / \\:::\\ \\:::\\ \\/____/ \\:::\\ /:::/ / \\:::\\ /:::/ / \\::::/____/ |::| | \\::::/____/ \\::::/ / |::::::/ / \\:::\\ \\:::\\____\\ \\:::\\ /:::/ / \\:::\\__/:::/ / \\:::\\ \\ |::| | \\:::\\ \\ /:::/ / |:::::/ / \\:::\\ /:::/ / \\:::\\/:::/ / \\::::::::/ / \\:::\\ \\ |::| | \\:::\\ \\ /:::/ / |::::/ / \\:::\\/:::/ / \\::::::/ / \\::::::/ / \\:::\\ \\ |::| | \\:::\\ \\ /:::/ / /:::/ / \\::::::/ / \\::::/ / \\::::/ / \\:::\\____\\ |::| | \\:::\\____\\ /:::/ / /:::/ / \\::::/ / \\::/____/ \\::/____/ \\::/ / |::|___| \\::/ / \\::/ / \\::/ / \\::/____/ ~~ ~~ \\/____/ ~~ \\/____/ \\/____/ \\/____/ _____ _______ _____ /\\ \\ /::\\ \\ /\\ \\ /::\\____\\ /::::\\ \\ /::\\ \\ /::::| | /::::::\\ \\ \\:::\\ \\ /:::::| | /::::::::\\ \\ \\:::\\ \\ /::::::| | /:::/~~\\:::\\ \\ \\:::\\ \\ /:::/|::| | /:::/ \\:::\\ \\ \\:::\\ \\ /:::/ |::| | /:::/ / \\:::\\ \\ /::::\\ \\ /:::/ |::| | _____ /:::/____/ \\:::\\____\\ /::::::\\ \\ /:::/ |::| |/\\ \\ |:::| | |:::| | /:::/\\:::\\ \\ /:: / |::| /::\\____\\|:::|____| |:::| | /:::/ \\:::\\____\\ \\::/ /|::| /:::/ / \\:::\\ \\ /:::/ / /:::/ \\::/ / \\/____/ |::| /:::/ / \\:::\\ \\ /:::/ / /:::/ / \\/____/ |::|/:::/ / \\:::\\ /:::/ / /:::/ / |::::::/ / \\:::\\__/:::/ / /:::/ / |:::::/ / \\::::::::/ / \\::/ / |::::/ / \\::::::/ / \\/____/ /:::/ / \\::::/ / /:::/ / \\::/____/ \\::/ / ~~ \\/____/ _____ _______ _____ _____ _____ /\\ \\ /::\\ \\ /\\ \\ /\\ \\ /\\ \\ /::\\ \\ /::::\\ \\ /::\\____\\ /::\\____\\ /::\\ \\ /::::\\ \\ /::::::\\ \\ /:::/ / /::::| | /::::\\ \\ /::::::\\ \\ /::::::::\\ \\ /:::/ / /:::::| | /::::::\\ \\ /:::/\\:::\\ \\ /:::/~~\\:::\\ \\ /:::/ / /::::::| | /:::/\\:::\\ \\ /:::/__\\:::\\ \\ /:::/ \\:::\\ \\ /:::/ / /:::/|::| | /:::/ \\:::\\ \\ /::::\\ \\:::\\ \\ /:::/ / \\:::\\ \\ /:::/ / /:::/ |::| | /:::/ \\:::\\ \\ /::::::\\ \\:::\\ \\ /:::/____/ \\:::\\____\\ /:::/ / _____ /:::/ |::| | _____ /:::/ / \\:::\\ \\ /:::/\\:::\\ \\:::\\ \\ |:::| | |:::| | /:::/____/ /\\ \\ /:::/ |::| |/\\ \\ /:::/ / \\:::\\ ___\\ /:::/ \\:::\\ \\:::\\____\\|:::|____| |:::| ||:::| / /::\\____\\/:: / |::| /::\\____\\/:::/____/ \\:::| | \\::/ \\:::\\ \\::/ / \\:::\\ \\ /:::/ / |:::|____\\ /:::/ /\\::/ /|::| /:::/ /\\:::\\ \\ /:::|____| \\/____/ \\:::\\ \\/____/ \\:::\\ \\ /:::/ / \\:::\\ \\ /:::/ / \\/____/ |::| /:::/ / \\:::\\ \\ /:::/ / \\:::\\ \\ \\:::\\ /:::/ / \\:::\\ \\ /:::/ / |::|/:::/ / \\:::\\ \\ /:::/ / \\:::\\____\\ \\:::\\__/:::/ / \\:::\\ /:::/ / |::::::/ / \\:::\\ /:::/ / \\::/ / \\::::::::/ / \\:::\\__/:::/ / |:::::/ / \\:::\\ /:::/ / \\/____/ \\::::::/ / \\::::::::/ / |::::/ / \\:::\\/:::/ / \\::::/ / \\::::::/ / /:::/ / \\::::::/ / \\::/____/ \\::::/ / /:::/ / \\::::/ / ~~ \\::/____/ \\::/ / \\::/____/ ~~ \\/____/ ~~","title":"\u5efa\u8bbe\u4e2d......"},{"location":"python/","text":"\u8d21\u732e\u8005 \u00b6 Author: Jiahong Shao","title":"\u7b80\u4ecb"},{"location":"python/#_1","text":"Author: Jiahong Shao","title":"\u8d21\u732e\u8005"},{"location":"pythonfunction/","text":"Author: Jiahong Shao 3.\u84dd\u6865\u676f\u51fd\u6570\u5b9a\u4e49 \u00b6 python\u5f31\u5316\u663e\u793a\u4f53\u73b0\u53d8\u91cf\u7c7b\u578b\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u50cf\u5176\u4ed6\u8bed\u8a00\u4e00\u6837\u89c4\u5b9a\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u76f4\u63a5\u5b9a\u4e49\u5373\u53ef 1 2 3 4 #\u65e0\u53c2\u51fd\u6570 def func (): print ( 'hello world' ) func () 1 hello world 1 2 3 4 5 #\u51fd\u6570\u5d4c\u5957 def f1 ( num ): for i in range ( num ): func () f1 ( 3 ) 1 2 3 hello world hello world hello world 1 2 3 4 5 6 #\u5728\u51fd\u6570\u4e2d\u66f4\u6539\u503c\u4e0d\u4f1a\u4f20\u51fa\u6765 i = 0 ; lst = [] def f2 (): i = 3 ; lst = [ 3 ] f2 () i , lst 1 (0, []) 1 2 3 4 5 6 #\u5373\u4f7f\u4f5c\u4e3a\u5f62\u53c2\u4f20\u9012\u4e5f\u4e0d\u4f1a\u4f20\u51fa\u6765 lst = [ 1 , 2 , 3 , 4 ] def f3 ( lst ): lst = lst + [ 5 ] f3 ( lst ) lst 1 [1, 2, 3, 4] 1 2 3 4 5 6 7 #\u4e0d\u4f5c\u4e3a\u5f62\u53c2\u4f20\u5165\uff0c\u4f46\u662f\u8c03\u7528\u6539\u53d8\u81ea\u8eab\u7684\u51fd\u6570\uff0c\u4f1a\u5bf9\u5176\u81ea\u8eab\u6539\u53d8 lst = [ 1 , 2 , 3 , 4 ] def f4 (): lst . append ( 5 ) lst . extend ([ 6 , 7 ]) f4 () lst 1 [1, 2, 3, 4, 5, 6, 7] 1 2 3 4 5 6 #\u4f5c\u4e3a\u5f62\u53c2\u4f20\u5165\uff0c\u9700\u8981\u8bbe\u7f6e\u8fd4\u56de\u503c\u624d\u80fd\u5c06\u51fd\u6570\u5185\u7684\u6539\u53d8\u4f20\u51fa\u6765 lst = [ 1 , 2 , 3 , 4 ] def f4 (): return lst + [ 5 ] lst = f4 () lst 1 [1, 2, 3, 4, 5] 1 2 3 4 5 6 7 8 #*args\u662f\u53ef\u53d8\u957f\u5ea6\u5f62\u53c2\uff0c\u8fd4\u56de\u5143\u7ec4\uff0c\u5982print()\u51fd\u6570\u7b2c\u4e00\u4e2a\u5c31\u662f\u53ef\u53d8\u957f\u5ea6\u5f62\u53c2\uff1b**kwargs\u662f\u5173\u952e\u5b57\u5f62\u53c2\uff0c\u8fd4\u56de\u5173\u952e\u5b57\u5b57\u5178 def f5 ( a , b , c , * args , ** kwargs ): print ( 'a= {} ' . format ( a )) print ( 'b= {} ' . format ( b )) print ( 'c= {} ' . format ( c )) print ( 'args= {} ' . format ( args )) print ( 'kwargs= {} ' . format ( kwargs )) f5 ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , d = 9 , e = 10 ) 1 2 3 4 5 a=1 b=2 c=3 args=(4, 5, 6, 7, 8) kwargs={'d': 9, 'e': 10} 1 2 3 4 #pytho3.8\u65b0\u589e\uff1a/\u4e0e*\uff0c/\u4e4b\u524d\u662f\u4ec5\u9650\u4f4d\u7f6e\u5f62\u53c2\uff0c*\u540e\u9762\u662f\u4ec5\u9650\u5173\u952e\u5b57\u5f62\u53c2 def f6 ( a , b , / , c , d , * , e , f ): print ( a , b , c , d , e , f ) f6 ( 10 , 20 , 30 , 40 , e = 50 , f = 60 ) 1 10 20 30 40 50 60 1 f6 ( a = 10 , 20 , 30 , 40 , e = 50 , f = 60 ) 1 2 3 4 File \"<ipython-input-9-1818e3935a9c>\", line 1 f6(a=10, 20, 30, 40, e=50, f=60) ^ SyntaxError: positional argument follows keyword argument 1 f6 ( 10 , 20 , d = 30 , c = 40 , e = 50 , f = 60 ) 1 10 20 40 30 50 60 1 f6 ( 10 , 20 , c = 30 , 40 , e = 50 , f = 60 ) 1 2 3 4 File \"<ipython-input-11-3dc7aa1e601b>\", line 1 f6(10, 20, c=30, 40, e=50, f=60) ^ SyntaxError: positional argument follows keyword argument 1 f6 ( 10 , 20 , c = 30 , d = 40 , e = 50 , f = 60 ) 1 10 20 30 40 50 60 1 f6 ( 10 , 20 , d = 30 , c = 40 , 50 , f = 60 ) 1 2 3 4 File \"<ipython-input-13-b07b9492ff16>\", line 1 f6(10, 20, d=30, c=40, 50, f=60) ^ SyntaxError: positional argument follows keyword argument 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #\u4e8c\u53c9\u6811\u521b\u5efa\u548c\u5148\u5e8f\u904d\u5386\uff0c\u6709\u53ef\u80fd\u4f1a\u7528\u5230\u7c7b class Node ( object ): def __init__ ( self , value = '' , lchild = None , rchild = None ): self . value = value self . lchild = lchild self . rchild = rchild class BiTree ( object ): def __init__ ( self , nodes = '' ): self . root = Node () for node in nodes : self . add ( node ) def add ( self , value ): if self . root . value == '' : self . root . value = value else : queue = [ self . root ] while queue != [] and self . root : if queue [ 0 ] . lchild == None : queue [ 0 ] . lchild = Node ( value ) return else : queue . append ( queue [ 0 ] . lchild ) if queue [ 0 ] . rchild == None : queue [ 0 ] . rchild = Node ( value ) return else : queue . append ( queue [ 0 ] . rchild ) queue . pop ( 0 ) def preOrderTraverse ( self , root ): #\u9012\u5f52\u51e0\u4e4e\u6ca1\u533a\u522b if root == None : return print ( root . value ) self . preOrderTraverse ( root . lchild ) self . preOrderTraverse ( root . rchild ) 1 2 root = BiTree ( '12345678' ) root . preOrderTraverse ( root . root ) 1 2 3 4 5 6 7 8 1 2 4 8 5 3 6 7 1 2 #\u7b80\u5355\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u7528lambda\u8868\u8fbe\u5f0f\uff0c\u5176\u4e3b\u8981\u76ee\u7684\u662f\u53ef\u4ee5\u4e0d\u7528\u5b9a\u4e49\u51fd\u6570\u6216\u7ed9\u51fd\u6570\u53d6\u540d\u5b57 ( lambda x : x ** 2 )( 3 ) #\u683c\u5f0f\u4e3alambda+\u53d8\u91cf\u540d1+\u2026\u2026+\u53d8\u91cf\u540dn\uff1a\u8fd4\u56de\u503c 1 9 1 2 3 #map\u51fd\u6570\u7528\u4e8e\u5c06\u7b2c\u4e8c\u4e2a\u5f62\u53c2\uff08*args\uff09\u7684\u5bb9\u5668\u5185\u7684\u6240\u6709\u53c2\u6570\u6267\u884c\u4e00\u904d\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u6570 x , y = map ( int , input () . split ()) x , y 1 2 3 4 5 6 7 3 4 (3, 4) 1 2 lst = list ( map ( lambda x : 2 if x == 'black' else 1 if x == 'gray' else 0 ,[ 'black' , 'black' , 'white' , 'white' , 'black' , 'gray' ])) #lambda\u7528\u4e8e\u6253\u6807\u7b7e lst 1 [2, 2, 0, 0, 2, 1] 1 2 lst1 = list ( map ( lambda x , y : x * y ,[ 'a' , 'b' , 'c' , 'd' ],[ 1 , 2 , 3 , 4 ])) #\u5982\u679clambda\u9700\u8981\u591a\u4e2a\u4f20\u5165\u5f62\u53c2\uff0cmap\u7b2c\u4e8c\u4e2a\u5f62\u53c2*args\u9700\u8981\u4e0elambda\u7684\u53d8\u91cf\u6570\u5339\u914d lst1 1 ['a', 'bb', 'ccc', 'dddd'] 1 2 3 #map\u51fd\u6570\u4e0d\u63a5\u53d7**kwargs lst2 = list ( map ( lambda x , y : x * y , x = [ 1 , 2 , 3 ], y = ( 2 , 3 , 4 ))) lst2 1 2 3 4 5 6 7 8 9 10 11 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-20-7d05cad3f2dd> in <module> 1 #map\u51fd\u6570\u4e0d\u63a5\u53d7**kwargs ----> 2 lst2=list(map(lambda x,y:x*y,x=[1,2,3],y=(2,3,4))) 3 lst2 TypeError: map() takes no keyword arguments","title":"\u51fd\u6570"},{"location":"pythonfunction/#3","text":"python\u5f31\u5316\u663e\u793a\u4f53\u73b0\u53d8\u91cf\u7c7b\u578b\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u50cf\u5176\u4ed6\u8bed\u8a00\u4e00\u6837\u89c4\u5b9a\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u76f4\u63a5\u5b9a\u4e49\u5373\u53ef 1 2 3 4 #\u65e0\u53c2\u51fd\u6570 def func (): print ( 'hello world' ) func () 1 hello world 1 2 3 4 5 #\u51fd\u6570\u5d4c\u5957 def f1 ( num ): for i in range ( num ): func () f1 ( 3 ) 1 2 3 hello world hello world hello world 1 2 3 4 5 6 #\u5728\u51fd\u6570\u4e2d\u66f4\u6539\u503c\u4e0d\u4f1a\u4f20\u51fa\u6765 i = 0 ; lst = [] def f2 (): i = 3 ; lst = [ 3 ] f2 () i , lst 1 (0, []) 1 2 3 4 5 6 #\u5373\u4f7f\u4f5c\u4e3a\u5f62\u53c2\u4f20\u9012\u4e5f\u4e0d\u4f1a\u4f20\u51fa\u6765 lst = [ 1 , 2 , 3 , 4 ] def f3 ( lst ): lst = lst + [ 5 ] f3 ( lst ) lst 1 [1, 2, 3, 4] 1 2 3 4 5 6 7 #\u4e0d\u4f5c\u4e3a\u5f62\u53c2\u4f20\u5165\uff0c\u4f46\u662f\u8c03\u7528\u6539\u53d8\u81ea\u8eab\u7684\u51fd\u6570\uff0c\u4f1a\u5bf9\u5176\u81ea\u8eab\u6539\u53d8 lst = [ 1 , 2 , 3 , 4 ] def f4 (): lst . append ( 5 ) lst . extend ([ 6 , 7 ]) f4 () lst 1 [1, 2, 3, 4, 5, 6, 7] 1 2 3 4 5 6 #\u4f5c\u4e3a\u5f62\u53c2\u4f20\u5165\uff0c\u9700\u8981\u8bbe\u7f6e\u8fd4\u56de\u503c\u624d\u80fd\u5c06\u51fd\u6570\u5185\u7684\u6539\u53d8\u4f20\u51fa\u6765 lst = [ 1 , 2 , 3 , 4 ] def f4 (): return lst + [ 5 ] lst = f4 () lst 1 [1, 2, 3, 4, 5] 1 2 3 4 5 6 7 8 #*args\u662f\u53ef\u53d8\u957f\u5ea6\u5f62\u53c2\uff0c\u8fd4\u56de\u5143\u7ec4\uff0c\u5982print()\u51fd\u6570\u7b2c\u4e00\u4e2a\u5c31\u662f\u53ef\u53d8\u957f\u5ea6\u5f62\u53c2\uff1b**kwargs\u662f\u5173\u952e\u5b57\u5f62\u53c2\uff0c\u8fd4\u56de\u5173\u952e\u5b57\u5b57\u5178 def f5 ( a , b , c , * args , ** kwargs ): print ( 'a= {} ' . format ( a )) print ( 'b= {} ' . format ( b )) print ( 'c= {} ' . format ( c )) print ( 'args= {} ' . format ( args )) print ( 'kwargs= {} ' . format ( kwargs )) f5 ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , d = 9 , e = 10 ) 1 2 3 4 5 a=1 b=2 c=3 args=(4, 5, 6, 7, 8) kwargs={'d': 9, 'e': 10} 1 2 3 4 #pytho3.8\u65b0\u589e\uff1a/\u4e0e*\uff0c/\u4e4b\u524d\u662f\u4ec5\u9650\u4f4d\u7f6e\u5f62\u53c2\uff0c*\u540e\u9762\u662f\u4ec5\u9650\u5173\u952e\u5b57\u5f62\u53c2 def f6 ( a , b , / , c , d , * , e , f ): print ( a , b , c , d , e , f ) f6 ( 10 , 20 , 30 , 40 , e = 50 , f = 60 ) 1 10 20 30 40 50 60 1 f6 ( a = 10 , 20 , 30 , 40 , e = 50 , f = 60 ) 1 2 3 4 File \"<ipython-input-9-1818e3935a9c>\", line 1 f6(a=10, 20, 30, 40, e=50, f=60) ^ SyntaxError: positional argument follows keyword argument 1 f6 ( 10 , 20 , d = 30 , c = 40 , e = 50 , f = 60 ) 1 10 20 40 30 50 60 1 f6 ( 10 , 20 , c = 30 , 40 , e = 50 , f = 60 ) 1 2 3 4 File \"<ipython-input-11-3dc7aa1e601b>\", line 1 f6(10, 20, c=30, 40, e=50, f=60) ^ SyntaxError: positional argument follows keyword argument 1 f6 ( 10 , 20 , c = 30 , d = 40 , e = 50 , f = 60 ) 1 10 20 30 40 50 60 1 f6 ( 10 , 20 , d = 30 , c = 40 , 50 , f = 60 ) 1 2 3 4 File \"<ipython-input-13-b07b9492ff16>\", line 1 f6(10, 20, d=30, c=40, 50, f=60) ^ SyntaxError: positional argument follows keyword argument 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #\u4e8c\u53c9\u6811\u521b\u5efa\u548c\u5148\u5e8f\u904d\u5386\uff0c\u6709\u53ef\u80fd\u4f1a\u7528\u5230\u7c7b class Node ( object ): def __init__ ( self , value = '' , lchild = None , rchild = None ): self . value = value self . lchild = lchild self . rchild = rchild class BiTree ( object ): def __init__ ( self , nodes = '' ): self . root = Node () for node in nodes : self . add ( node ) def add ( self , value ): if self . root . value == '' : self . root . value = value else : queue = [ self . root ] while queue != [] and self . root : if queue [ 0 ] . lchild == None : queue [ 0 ] . lchild = Node ( value ) return else : queue . append ( queue [ 0 ] . lchild ) if queue [ 0 ] . rchild == None : queue [ 0 ] . rchild = Node ( value ) return else : queue . append ( queue [ 0 ] . rchild ) queue . pop ( 0 ) def preOrderTraverse ( self , root ): #\u9012\u5f52\u51e0\u4e4e\u6ca1\u533a\u522b if root == None : return print ( root . value ) self . preOrderTraverse ( root . lchild ) self . preOrderTraverse ( root . rchild ) 1 2 root = BiTree ( '12345678' ) root . preOrderTraverse ( root . root ) 1 2 3 4 5 6 7 8 1 2 4 8 5 3 6 7 1 2 #\u7b80\u5355\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u7528lambda\u8868\u8fbe\u5f0f\uff0c\u5176\u4e3b\u8981\u76ee\u7684\u662f\u53ef\u4ee5\u4e0d\u7528\u5b9a\u4e49\u51fd\u6570\u6216\u7ed9\u51fd\u6570\u53d6\u540d\u5b57 ( lambda x : x ** 2 )( 3 ) #\u683c\u5f0f\u4e3alambda+\u53d8\u91cf\u540d1+\u2026\u2026+\u53d8\u91cf\u540dn\uff1a\u8fd4\u56de\u503c 1 9 1 2 3 #map\u51fd\u6570\u7528\u4e8e\u5c06\u7b2c\u4e8c\u4e2a\u5f62\u53c2\uff08*args\uff09\u7684\u5bb9\u5668\u5185\u7684\u6240\u6709\u53c2\u6570\u6267\u884c\u4e00\u904d\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u6570 x , y = map ( int , input () . split ()) x , y 1 2 3 4 5 6 7 3 4 (3, 4) 1 2 lst = list ( map ( lambda x : 2 if x == 'black' else 1 if x == 'gray' else 0 ,[ 'black' , 'black' , 'white' , 'white' , 'black' , 'gray' ])) #lambda\u7528\u4e8e\u6253\u6807\u7b7e lst 1 [2, 2, 0, 0, 2, 1] 1 2 lst1 = list ( map ( lambda x , y : x * y ,[ 'a' , 'b' , 'c' , 'd' ],[ 1 , 2 , 3 , 4 ])) #\u5982\u679clambda\u9700\u8981\u591a\u4e2a\u4f20\u5165\u5f62\u53c2\uff0cmap\u7b2c\u4e8c\u4e2a\u5f62\u53c2*args\u9700\u8981\u4e0elambda\u7684\u53d8\u91cf\u6570\u5339\u914d lst1 1 ['a', 'bb', 'ccc', 'dddd'] 1 2 3 #map\u51fd\u6570\u4e0d\u63a5\u53d7**kwargs lst2 = list ( map ( lambda x , y : x * y , x = [ 1 , 2 , 3 ], y = ( 2 , 3 , 4 ))) lst2 1 2 3 4 5 6 7 8 9 10 11 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-20-7d05cad3f2dd> in <module> 1 #map\u51fd\u6570\u4e0d\u63a5\u53d7**kwargs ----> 2 lst2=list(map(lambda x,y:x*y,x=[1,2,3],y=(2,3,4))) 3 lst2 TypeError: map() takes no keyword arguments","title":"3.\u84dd\u6865\u676f\u51fd\u6570\u5b9a\u4e49"},{"location":"pythoninput/","text":"Author: Jiahong Shao 1.\u8bfb\u53d6\u8f93\u5165\u5185\u5bb9 \u00b6 \u7531\u4e8epython\u662f\u5f3a\u7c7b\u578b\u8bed\u8a00\uff0c\u548cC++\u4e0ejava\u4e00\u6837\u9700\u8981\u540c\u4e00\u4e2a\u7c7b\u578b\u624d\u80fd\u6267\u884c\u52a0\u51cf\u4e58\u9664\u7b49\u8fd0\u7b97\u7b26\uff0c\u6bd4\u5982\u5b57\u7b26\u4e32\u548c\u6570\u5b57\u6ca1\u6cd5\u76f8\u52a0\u3002\u4f46\u662fpython\u53c8\u5f31\u5316\u4e86\u6307\u5b9a\u6570\u636e\u7c7b\u578b\uff0c\u5728\u8fd0\u884c\u65f6\u624d\u4f1a\u505a\u6570\u636e\u7c7b\u578b\u68c0\u67e5\uff0c\u76f4\u63a5\u58f0\u660e\u53d8\u91cf\u5373\u53ef\u4e0d\u9700\u8981\u63d0\u524d\u5b9a\u4e49\u53d8\u91cf\u3002\u56e0\u6b64\uff0c\u5c24\u5176\u662f\u5728\u8bfb\u53d6\u8f93\u5165\u5185\u5bb9\u65f6\uff0c\u683c\u5916\u9700\u8981\u6ce8\u91cd\u7c7b\u578b\u8f6c\u6362\u3002 input()\u51fd\u6570\u7528\u4e8e\u8bfb\u53d6\u8f93\u5165\u7684\u4e00\u884c\u5185\u5bb9\uff0c\u8fd4\u56de\u5b57\u7b26\u4e32\uff0c\u76f8\u5f53\u4e8ec/c++\u7684getline 1 2 x = input ( \"\u8bf7\u8f93\u5165\u4e00\u884c\u5185\u5bb9\" ) #input\u51fd\u6570\u62ec\u53f7\u91cc\u53ef\u4ee5\u52a0\u5165\u5b57\u7b26\u4e32\u6216\u8005\u53d8\u91cf\u6216\u8005\u6570\u5b57\uff0c\u7528\u4e8e\u8f93\u5165\u63d0\u793a\uff0c\u4f46\u662f\u5bf9\u4e8e\u84dd\u6865\u676f\u65e0\u7528 x 1 2 3 4 5 6 7 \u8bf7\u8f93\u5165\u4e00\u884c\u5185\u5bb9233333333333333333333333333 '233333333333333333333333333' \u4e00\u822c\u60c5\u51b5\u4e0b\u9700\u8981\u5c06\u8bfb\u5165\u7684\u5185\u5bb9\u8f6c\u6362\u4e3a\u6570\u5b57\uff0c\u53ef\u4ee5\u7528int()/float()/eval()\u51fd\u6570\uff0cpython\u6ca1\u6709\u5bf9\u6570\u5b57\u7684\u9650\u5236\uff0c\u4e0d\u7528\u62c5\u5fc3\u8d85\u51fac/c++\u4e2dint/float\u7684\u8303\u56f4 1.1\u6574\u578b \u00b6 1 2 x = int ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u6574\u578b,\u4e0d\u4f1a\u6ea2\u51fa x 1 2 3 4 5 6 7 23333333333333333333333333333333333333333333333333333 23333333333333333333333333333333333333333333333333333 1 2 x / 2 , x // 2 #python\u4e2d\u4e00\u4e2a\u9664\u53f7\u662f\u8f93\u8840\u9664\u6cd5\uff0c\u4e24\u4e2a\u9664\u53f7\u624d\u662f\u6574\u6570\u9664\u6cd5 1 (1.1666666666666667e+52, 11666666666666666666666666666666666666666666666666666) 1 2 x = int ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u5b9e\u578b\u4f1a\u51fa\u9519 x 1 2 3 4 5 6 7 8 9 10 11 12 13 14 233.3 --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-4-6b6c8cf08080> in <module> ----> 1 x=int(input())#\u8bfb\u53d6\u4e00\u4e2a\u5b9e\u578b\u4f1a\u51fa\u9519 2 x ValueError: invalid literal for int() with base 10: '233.3' 1 int ( 233.3 ) #\u4f46\u662f\u53ef\u4ee5\u5f3a\u5236\u628a\u5b9e\u578b\u8f6c\u6362\u4e3a\u6574\u578b 1 233 1 int ( '1001' , 2 ), int ( '077233' , 8 ), int ( '0xff233' , 16 ) #\u53ef\u4ee5\u5c06\u5176\u4ed6\u8fdb\u5236\u662f\u6570\u5b57\u5b57\u7b26\u4e32\u8fdb\u884c\u8f6c\u6362 1 (9, 32411, 1045043) 1 bin ( 2021 ), oct ( 2021 ), hex ( 2021 ) #\u4e5f\u53ef\u4ee5\u7b80\u5355\u8fdb\u884c\u8fdb\u5236\u8f6c\u6362\uff0c\u548cc++\u4e00\u6837\u65b9\u4fbf 1 ('0b11111100101', '0o3745', '0x7e5') 1.2\u5b9e\u578b \u00b6 1 2 x = float ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u5b9e\u578b x 1 2 3 4 5 6 7 233.3 233.3 1 1.1 + 2.2 1 3.3000000000000003 1 1.1 + 2.2 == 3.3 #python\u6ca1\u6709\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570double\uff0c\u53ea\u6709float\uff0c\u56e0\u6b64float\u7c7b\u578b\u8fd0\u7b97\u7ed3\u679c\u5224\u7b49\u4f1a\u51fa\u95ee\u9898 1 False 1 2 3 4 5 6 #\u89e3\u51b3\u65b9\u6cd5:\u8c03\u7528decimal\u6a21\u5757 from decimal import Decimal a = Decimal ( '2.2' ) b = Decimal ( '1.1' ) print ( a + b ) a + b 1 2 3 4 5 6 7 3.3 Decimal('3.3') 1 a + b == Decimal ( '3.3' ) 1 True 1 2 3 4 5 6 7 8 #\u53ef\u4ee5\u901a\u8fc7\u683c\u5f0f\u5316\u8f93\u51fa\u65f6%g\u63a7\u5236\u7cbe\u5ea6\uff0c\u4e5f\u53ef\u4ee5\u8fd9\u6837\u63a7\u5236\u7cbe\u5ea6 a = Decimal ( '9.7' ) b = Decimal ( '1.7' ) print ( a / b ) from decimal import localcontext with localcontext () as ctx : ctx . prec = 90 print ( a / b ) 1 2 5.705882352941176470588235294 5.70588235294117647058823529411764705882352941176470588235294117647058823529411764705882353 \u5f3a\u5927\u7684eval()\u53ef\u4ee5\u628a\u5b57\u7b26\u7684\u5185\u5bb9\u8f6c\u6362\u4e3a\u7b49\u6548\u7684\u4ee3\u7801 1.3\u5b57\u7b26\u4e32 \u00b6 1 2 x = eval ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u4e32\u3001\u751a\u81f3\u53ef\u4ee5\u662f\u96c6\u5408\u3001\u5b57\u5178\u3001\u5143\u7ec4\u3001\u5217\u8868\u548c\u516c\u5f0f x 1 2 3 4 5 6 7 '123456' '123456' 1 '123' == \"123\" #python\u4e0d\u533a\u5206\u5b57\u7b26\u4e32\uff0c\u6ca1\u6709\u5b57\u7b26\u6570\u636e\u7c7b\u578b\uff0c\u9700\u8981\u8c03\u7528\u51fd\u6570ord()\u6765\u5c06\u5b57\u7b26\u8fd4\u56de\u5bf9\u5e94\u7684ASCII\u503c\uff0cchr()\u6765\u5c06\u6570\u5b57\u8f6c\u6362\u4e3a 1 True 1 type ( 'a' ), ord ( 'a' ), chr ( ord ( 'a' )) #\u9017\u53f7\u9694\u5f00\u4f1a\u9ed8\u8ba4\u8f6c\u6362\u4e3a\u5143\u7ec4 1 (str, 97, 'a') 1 x [ 0 ], x [ 1 ], x [ 2 ] #python\u7684\u5b57\u7b26\u4e32\u4e5f\u53ef\u4ee5\u5f53\u505a\u5217\u8868\u6765\u7406\u89e3 1 ('1', '2', '3') 1 x [ 0 ] = '4' #\u4f46\u662fpython\u7684\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b 1 2 3 4 5 6 7 8 9 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-18-7121c4394d99> in <module> ----> 1 x[0]='4'#\u4f46\u662fpython\u7684\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b TypeError: 'str' object does not support item assignment 1 x . replace ( '1' , '4' ) #\u9700\u8981\u8c03\u7528\u51fd\u6570\u6765\u4fee\u6539\u67d0\u4e2a\u5b57\u7b26 1 '423456' 1 '1 2 3 4' . split () #\u5b57\u7b26\u4e32\u5207\u5206\u51fd\u6570\u751f\u6210\u5217\u8868\uff0c\u9ed8\u8ba4\u4ee5' '\u5207\u5206\uff0c\u4e5f\u53ef\u4ee5\u5728\u51fd\u6570\u91cc\u52a0\u5165\u5b57\u7b26\u4e32\u4ee5\u6307\u5b9a\u5b57\u7b26\u4e32\u8fdb\u884c\u5207\u5206 1 ['1', '2', '3', '4'] 1 2 3 4 5 #\u5982\u679c\u4e00\u884c\u6709\u591a\u4e2a\u6570\u636e\uff0c\u5f80\u5f80\u9700\u8981\u7528\u5230\u5b57\u7b26\u4e32\u5207\u5206\u51fd\u6570 x , y = ( int ( i ) for i in input () . split ()) #\u5143\u7d20/\u5217\u8868\u63a8\u5bfc\u5f0f #\u5e38\u89c1\u7528\u6cd5\u4e3a[\u751f\u6210\u7684\u5185\u5bb9 for \u8fed\u4ee3\u53d8\u91cf in \u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u5982\u5b57\u7b26\u4e32\u3001\u96c6\u5408\u3001\u5b57\u5178\u3001\u5143\u7ec4\u3001\u5217\u8868\uff09 if \u6761\u4ef6] #\u7528\u5143\u7ec4\u63a8\u5bfc\u5f0f\u7684\u76ee\u7684\u662f\u5229\u7528python\u53ef\u4ee5\u540c\u65f6\u8d4b\u503c\u7684\u7279\u70b9\uff0c\u5143\u7ec4\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u53ef\u4ee5\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf\uff08\u76f8\u5f53\u4e8e\u53bb\u62ec\u53f7\uff09\uff0c\u5217\u8868\u63a8\u5bfc\u5f0f\u5219\u53ea\u80fd\u8fd4\u56de\u4e00\u4e2a\u5217\u8868 x , y 1 2 3 4 5 6 7 23 45 (23, 45) 1.4\u96c6\u5408 \u00b6 1 2 x = eval ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u4e32\u3001\u751a\u81f3\u53ef\u4ee5\u662f\u96c6\u5408\u3001\u5b57\u5178\u3001\u5143\u7ec4\u3001\u5217\u8868\u548c\u516c\u5f0f x #\u96c6\u5408\u4e3a\u4e86\u4fdd\u8bc1\u5143\u7d20\u7684\u4e92\u5f02\u6027\uff0c\u4f1a\u4e3b\u52a8\u53bb\u91cd 1 2 3 4 5 6 7 {1,2,3,3,4,4,5} {1, 2, 3, 4, 5} 1 list ( set ([ 1 , 2 , 3 , 3 , 4 , 4 , 5 ])) #python\u7ecf\u5e38\u7528\u96c6\u5408\u6765\u53bb\u91cd 1 [1, 2, 3, 4, 5] 1 x [ 0 ] #\u96c6\u5408\u662f\u65e0\u5e8f\u7684\uff0c\u4e0d\u80fd\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee\u5143\u7d20 1 2 3 4 5 6 7 8 9 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-24-5f13ffb01050> in <module> ----> 1 x[0]#\u96c6\u5408\u662f\u65e0\u5e8f\u7684\uff0c\u4e0d\u80fd\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee\u5143\u7d20 TypeError: 'set' object is not subscriptable 1 2 3 x . add ( 7 ) x . remove ( 4 ) x #\u96c6\u5408\u7c7b\u4f3c\u4e8e\u6808\uff0c\u53ef\u4ee5pop\u548cpush\u6216\u8005add\u548cremove\uff0c\u662f\u53ef\u53d8\u6570\u636e\u7c7b\u578b 1 {1, 2, 3, 5, 7} 1.5\u5b57\u5178 \u00b6 1 2 3 x = eval ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u4e32\u3001\u751a\u81f3\u53ef\u4ee5\u662f\u96c6\u5408\u3001\u5b57\u5178\u3001\u5143\u7ec4\u3001\u5217\u8868\u548c\u516c\u5f0f x #\u4efb\u610f\u7684\u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b(hashable)\uff08\u53ea\u9700\u8981\u8bb0\u4f4f\u5217\u8868list\u3001\u96c6\u5408set\u3001\u5b57\u5178dict\u4e0d\u80fd\u4f5c\u4e3akey\u5c31\u884c\uff09\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u952e\u503c\uff0c\u4e14'1'\u4e0e1\u4e0d\u540c\u3002 #\u5982\u679c\u4e00\u4e2a\u952e\u5bf9\u5e94\u591a\u4e2a\u503c\uff0c\u4ee5\u952e\u5165\u65f6\u6700\u540e\u7684\u503c\u4e3a\u952e\u5bf9\u5e94\u7684\u503c 1 2 3 4 5 6 7 {'1':2,3:4,(5,6):'7',1:8,'3':9,'a':10,'a':233} {'1': 2, 3: 4, (5, 6): '7', 1: 8, '3': 9, 'a': 233} 1 {[ 1 , 2 , 3 ]: 2 } #\u53ef\u53d8\u6570\u636e\u7c7b\u578b\u4e0d\u80fd\u4f5c\u4e3a\u952e\u503c 1 2 3 4 5 6 7 8 9 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-27-4d69b2f3e39b> in <module> ----> 1 {[1,2,3]:2}#\u53ef\u53d8\u6570\u636e\u7c7b\u578b\u4e0d\u80fd\u4f5c\u4e3a\u952e\u503c TypeError: unhashable type: 'list' 1 2 3 4 5 6 7 8 9 #\u5b57\u5178\u5e38\u7528\u6765\u7edf\u8ba1\u6587\u672c\u4e2d\u5b57\u7b26\u51fa\u73b0\u7684\u5b57\u6570\uff0c\u56e0\u6b64\u88ab\u53eb\u505a\u5b57\u5178 text = 'absjddsfnhjfsakjfnajscndsjfjcndjzcssjaknfcas' dct = {} for i in text : if i not in dct : #in\u5173\u952e\u5b57\u540e\u9762\u4e00\u822c\u90fd\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61 dct [ i ] = 1 else : dct [ i ] += 1 #python\u6ca1\u6709++/-- dct 1 2 3 4 5 6 7 8 9 10 11 {'a': 5, 'b': 1, 's': 8, 'j': 8, 'd': 4, 'f': 5, 'n': 5, 'h': 1, 'k': 2, 'c': 4, 'z': 1} 1.6\u5143\u7ec4 \u00b6 1 2 x = eval ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u4e32\u3001\u751a\u81f3\u53ef\u4ee5\u662f\u96c6\u5408\u3001\u5b57\u5178\u3001\u5143\u7ec4\u3001\u5217\u8868\u548c\u516c\u5f0f x 1 2 3 4 5 6 7 (1,2,3,3,4,4,5) (1, 2, 3, 3, 4, 4, 5) 1 x [ 0 ] #\u5143\u7ec4\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee 1 1 1 2 3 print ( x + ( 2 , 3 )) #\u62fc\u63a5\u4e0d\u4f1a\u4fee\u6539\u5143\u7ec4\u672c\u8eab #\u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u65e0\u6cd5\u901a\u8fc7\u5143\u7d20\u4fee\u6539\u5143\u7ec4 x 1 2 3 4 5 6 7 (1, 2, 3, 3, 4, 4, 5, 2, 3) (1, 2, 3, 3, 4, 4, 5) 1 2 3 #\u540c\u65f6\u8d4b\u503c\u7684\u672c\u8d28\u662f\u5143\u7ec4\u53bb\u62ec\u53f7 a1 , a2 , a3 , a4 = 'a' , 2 ,[ 1 , '2' ],( 2 , 3 ) a1 , a2 , a3 , a4 1 ('a', 2, [1, '2'], (2, 3)) 1 2 3 4 5 6 x = 1 y = 1 #\u8fd0\u7528\u540c\u65f6\u8d4b\u503c\u6765\u5904\u7406\u6590\u6ce2\u90a3\u5951\u6570\u5217 for i in range ( 10 ): print ( x ) x , y = y , x + y 1 2 3 4 5 6 7 8 9 10 1 1 2 3 5 8 13 21 34 55 1.7\u5217\u8868 \u00b6 1 2 x = eval ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u4e32\u3001\u751a\u81f3\u53ef\u4ee5\u662f\u96c6\u5408\u3001\u5b57\u5178\u3001\u5143\u7ec4\u3001\u5217\u8868\u548c\u516c\u5f0f x 1 2 3 4 5 6 7 [1,2,3,3,4,4,5] [1, 2, 3, 3, 4, 4, 5] 1 x [ 0 ] #\u5217\u8868\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee 1 1 1 2 print ( x + [ 2 ]) #\u62fc\u63a5\u4e0d\u4f1a\u4fee\u6539\u5217\u8868\u672c\u8eab x 1 2 3 4 5 6 7 [1, 2, 3, 3, 4, 4, 5, 2] [1, 2, 3, 3, 4, 4, 5] 1 2 3 x . extend ([ 2 , 3 ]) #extend\u51fd\u6570\u52a0\u53ef\u8fed\u4ee3\u5bf9\u8c61 x . extend (( 1 , 2 )) #extend\u51fd\u6570\u52a0\u53ef\u8fed\u4ee3\u5bf9\u8c61 x 1 [1, 2, 3, 3, 4, 4, 5, 2, 3, 1, 2] 1 2 3 4 x . append ( 5 ) #append\u51fd\u6570\u52a0\u5bf9\u8c61 x . append ([ 'a' , 'c' ]) #append\u4e0d\u4f1a\u628a\u8fed\u4ee3\u5bf9\u8c61\u62c6\u5f00\u6210\u591a\u4e2a\u5143\u7d20 x . append (( 3 , 4 )) x 1 [1, 2, 3, 3, 4, 4, 5, 2, 3, 1, 2, 5, ['a', 'c'], (3, 4)] eval\u8fd8\u53ef\u4ee5\u5904\u7406\u6570\u5b66\u516c\u5f0f \u00b6 1 2 x = eval ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u4e32\u3001\u751a\u81f3\u53ef\u4ee5\u662f\u96c6\u5408\u3001\u5b57\u5178\u3001\u5143\u7ec4\u3001\u5217\u8868\u548c\u516c\u5f0f x 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 x*2 [1, 2, 3, 3, 4, 4, 5, 2, 3, 1, 2, 5, ['a', 'c'], (3, 4), 1, 2, 3, 3, 4, 4, 5, 2, 3, 1, 2, 5, ['a', 'c'], (3, 4)] 1 '123' * 2 ,[ 1 , 2 , 3 ] * 3 ,( 1 , 2 , 3 ) * 2 #\u5b57\u7b26\u4e32\uff0c\u5217\u8868,\u5143\u7ec4\u867d\u7136\u4e0d\u53ef\u4ee5\u548c\u6570\u5b57\u76f8\u52a0\uff0c\u4f46\u662f\u53ef\u4ee5\u548c\u6574\u578b\u6570\u5b57\u76f8\u4e58\uff0c\u8868\u793a\u6210\u500d\u653e\u5927\u5b57\u7b26\u4e32 1 ('123123', [1, 2, 3, 1, 2, 3, 1, 2, 3], (1, 2, 3, 1, 2, 3)) 1 { '1' : 2 , '2' : 3 } * 2 #\u5b57\u5178\u3001\u96c6\u5408\u7531\u4e8e\u8981\u6c42\u952e\u503c\u3001\u5143\u7d20\u7684\u4e92\u5f02\u6027\uff0c\u4e0d\u53ef\u4ee5\u548c\u6574\u578b\u6570\u5b57\u76f8\u4e58 1 2 3 4 5 6 7 8 9 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-41-3f59c8c7dcb2> in <module> ----> 1 {'1':2,'2':3}*2#\u5b57\u5178\u3001\u96c6\u5408\u7531\u4e8e\u8981\u6c42\u952e\u503c\u3001\u5143\u7d20\u7684\u4e92\u5f02\u6027\uff0c\u4e0d\u53ef\u4ee5\u548c\u6574\u578b\u6570\u5b57\u76f8\u4e58 TypeError: unsupported operand type(s) for *: 'dict' and 'int'","title":"\u8f93\u5165"},{"location":"pythoninput/#1","text":"\u7531\u4e8epython\u662f\u5f3a\u7c7b\u578b\u8bed\u8a00\uff0c\u548cC++\u4e0ejava\u4e00\u6837\u9700\u8981\u540c\u4e00\u4e2a\u7c7b\u578b\u624d\u80fd\u6267\u884c\u52a0\u51cf\u4e58\u9664\u7b49\u8fd0\u7b97\u7b26\uff0c\u6bd4\u5982\u5b57\u7b26\u4e32\u548c\u6570\u5b57\u6ca1\u6cd5\u76f8\u52a0\u3002\u4f46\u662fpython\u53c8\u5f31\u5316\u4e86\u6307\u5b9a\u6570\u636e\u7c7b\u578b\uff0c\u5728\u8fd0\u884c\u65f6\u624d\u4f1a\u505a\u6570\u636e\u7c7b\u578b\u68c0\u67e5\uff0c\u76f4\u63a5\u58f0\u660e\u53d8\u91cf\u5373\u53ef\u4e0d\u9700\u8981\u63d0\u524d\u5b9a\u4e49\u53d8\u91cf\u3002\u56e0\u6b64\uff0c\u5c24\u5176\u662f\u5728\u8bfb\u53d6\u8f93\u5165\u5185\u5bb9\u65f6\uff0c\u683c\u5916\u9700\u8981\u6ce8\u91cd\u7c7b\u578b\u8f6c\u6362\u3002 input()\u51fd\u6570\u7528\u4e8e\u8bfb\u53d6\u8f93\u5165\u7684\u4e00\u884c\u5185\u5bb9\uff0c\u8fd4\u56de\u5b57\u7b26\u4e32\uff0c\u76f8\u5f53\u4e8ec/c++\u7684getline 1 2 x = input ( \"\u8bf7\u8f93\u5165\u4e00\u884c\u5185\u5bb9\" ) #input\u51fd\u6570\u62ec\u53f7\u91cc\u53ef\u4ee5\u52a0\u5165\u5b57\u7b26\u4e32\u6216\u8005\u53d8\u91cf\u6216\u8005\u6570\u5b57\uff0c\u7528\u4e8e\u8f93\u5165\u63d0\u793a\uff0c\u4f46\u662f\u5bf9\u4e8e\u84dd\u6865\u676f\u65e0\u7528 x 1 2 3 4 5 6 7 \u8bf7\u8f93\u5165\u4e00\u884c\u5185\u5bb9233333333333333333333333333 '233333333333333333333333333' \u4e00\u822c\u60c5\u51b5\u4e0b\u9700\u8981\u5c06\u8bfb\u5165\u7684\u5185\u5bb9\u8f6c\u6362\u4e3a\u6570\u5b57\uff0c\u53ef\u4ee5\u7528int()/float()/eval()\u51fd\u6570\uff0cpython\u6ca1\u6709\u5bf9\u6570\u5b57\u7684\u9650\u5236\uff0c\u4e0d\u7528\u62c5\u5fc3\u8d85\u51fac/c++\u4e2dint/float\u7684\u8303\u56f4","title":"1.\u8bfb\u53d6\u8f93\u5165\u5185\u5bb9"},{"location":"pythoninput/#11","text":"1 2 x = int ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u6574\u578b,\u4e0d\u4f1a\u6ea2\u51fa x 1 2 3 4 5 6 7 23333333333333333333333333333333333333333333333333333 23333333333333333333333333333333333333333333333333333 1 2 x / 2 , x // 2 #python\u4e2d\u4e00\u4e2a\u9664\u53f7\u662f\u8f93\u8840\u9664\u6cd5\uff0c\u4e24\u4e2a\u9664\u53f7\u624d\u662f\u6574\u6570\u9664\u6cd5 1 (1.1666666666666667e+52, 11666666666666666666666666666666666666666666666666666) 1 2 x = int ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u5b9e\u578b\u4f1a\u51fa\u9519 x 1 2 3 4 5 6 7 8 9 10 11 12 13 14 233.3 --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-4-6b6c8cf08080> in <module> ----> 1 x=int(input())#\u8bfb\u53d6\u4e00\u4e2a\u5b9e\u578b\u4f1a\u51fa\u9519 2 x ValueError: invalid literal for int() with base 10: '233.3' 1 int ( 233.3 ) #\u4f46\u662f\u53ef\u4ee5\u5f3a\u5236\u628a\u5b9e\u578b\u8f6c\u6362\u4e3a\u6574\u578b 1 233 1 int ( '1001' , 2 ), int ( '077233' , 8 ), int ( '0xff233' , 16 ) #\u53ef\u4ee5\u5c06\u5176\u4ed6\u8fdb\u5236\u662f\u6570\u5b57\u5b57\u7b26\u4e32\u8fdb\u884c\u8f6c\u6362 1 (9, 32411, 1045043) 1 bin ( 2021 ), oct ( 2021 ), hex ( 2021 ) #\u4e5f\u53ef\u4ee5\u7b80\u5355\u8fdb\u884c\u8fdb\u5236\u8f6c\u6362\uff0c\u548cc++\u4e00\u6837\u65b9\u4fbf 1 ('0b11111100101', '0o3745', '0x7e5')","title":"1.1\u6574\u578b"},{"location":"pythoninput/#12","text":"1 2 x = float ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u5b9e\u578b x 1 2 3 4 5 6 7 233.3 233.3 1 1.1 + 2.2 1 3.3000000000000003 1 1.1 + 2.2 == 3.3 #python\u6ca1\u6709\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570double\uff0c\u53ea\u6709float\uff0c\u56e0\u6b64float\u7c7b\u578b\u8fd0\u7b97\u7ed3\u679c\u5224\u7b49\u4f1a\u51fa\u95ee\u9898 1 False 1 2 3 4 5 6 #\u89e3\u51b3\u65b9\u6cd5:\u8c03\u7528decimal\u6a21\u5757 from decimal import Decimal a = Decimal ( '2.2' ) b = Decimal ( '1.1' ) print ( a + b ) a + b 1 2 3 4 5 6 7 3.3 Decimal('3.3') 1 a + b == Decimal ( '3.3' ) 1 True 1 2 3 4 5 6 7 8 #\u53ef\u4ee5\u901a\u8fc7\u683c\u5f0f\u5316\u8f93\u51fa\u65f6%g\u63a7\u5236\u7cbe\u5ea6\uff0c\u4e5f\u53ef\u4ee5\u8fd9\u6837\u63a7\u5236\u7cbe\u5ea6 a = Decimal ( '9.7' ) b = Decimal ( '1.7' ) print ( a / b ) from decimal import localcontext with localcontext () as ctx : ctx . prec = 90 print ( a / b ) 1 2 5.705882352941176470588235294 5.70588235294117647058823529411764705882352941176470588235294117647058823529411764705882353 \u5f3a\u5927\u7684eval()\u53ef\u4ee5\u628a\u5b57\u7b26\u7684\u5185\u5bb9\u8f6c\u6362\u4e3a\u7b49\u6548\u7684\u4ee3\u7801","title":"1.2\u5b9e\u578b"},{"location":"pythoninput/#13","text":"1 2 x = eval ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u4e32\u3001\u751a\u81f3\u53ef\u4ee5\u662f\u96c6\u5408\u3001\u5b57\u5178\u3001\u5143\u7ec4\u3001\u5217\u8868\u548c\u516c\u5f0f x 1 2 3 4 5 6 7 '123456' '123456' 1 '123' == \"123\" #python\u4e0d\u533a\u5206\u5b57\u7b26\u4e32\uff0c\u6ca1\u6709\u5b57\u7b26\u6570\u636e\u7c7b\u578b\uff0c\u9700\u8981\u8c03\u7528\u51fd\u6570ord()\u6765\u5c06\u5b57\u7b26\u8fd4\u56de\u5bf9\u5e94\u7684ASCII\u503c\uff0cchr()\u6765\u5c06\u6570\u5b57\u8f6c\u6362\u4e3a 1 True 1 type ( 'a' ), ord ( 'a' ), chr ( ord ( 'a' )) #\u9017\u53f7\u9694\u5f00\u4f1a\u9ed8\u8ba4\u8f6c\u6362\u4e3a\u5143\u7ec4 1 (str, 97, 'a') 1 x [ 0 ], x [ 1 ], x [ 2 ] #python\u7684\u5b57\u7b26\u4e32\u4e5f\u53ef\u4ee5\u5f53\u505a\u5217\u8868\u6765\u7406\u89e3 1 ('1', '2', '3') 1 x [ 0 ] = '4' #\u4f46\u662fpython\u7684\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b 1 2 3 4 5 6 7 8 9 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-18-7121c4394d99> in <module> ----> 1 x[0]='4'#\u4f46\u662fpython\u7684\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b TypeError: 'str' object does not support item assignment 1 x . replace ( '1' , '4' ) #\u9700\u8981\u8c03\u7528\u51fd\u6570\u6765\u4fee\u6539\u67d0\u4e2a\u5b57\u7b26 1 '423456' 1 '1 2 3 4' . split () #\u5b57\u7b26\u4e32\u5207\u5206\u51fd\u6570\u751f\u6210\u5217\u8868\uff0c\u9ed8\u8ba4\u4ee5' '\u5207\u5206\uff0c\u4e5f\u53ef\u4ee5\u5728\u51fd\u6570\u91cc\u52a0\u5165\u5b57\u7b26\u4e32\u4ee5\u6307\u5b9a\u5b57\u7b26\u4e32\u8fdb\u884c\u5207\u5206 1 ['1', '2', '3', '4'] 1 2 3 4 5 #\u5982\u679c\u4e00\u884c\u6709\u591a\u4e2a\u6570\u636e\uff0c\u5f80\u5f80\u9700\u8981\u7528\u5230\u5b57\u7b26\u4e32\u5207\u5206\u51fd\u6570 x , y = ( int ( i ) for i in input () . split ()) #\u5143\u7d20/\u5217\u8868\u63a8\u5bfc\u5f0f #\u5e38\u89c1\u7528\u6cd5\u4e3a[\u751f\u6210\u7684\u5185\u5bb9 for \u8fed\u4ee3\u53d8\u91cf in \u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u5982\u5b57\u7b26\u4e32\u3001\u96c6\u5408\u3001\u5b57\u5178\u3001\u5143\u7ec4\u3001\u5217\u8868\uff09 if \u6761\u4ef6] #\u7528\u5143\u7ec4\u63a8\u5bfc\u5f0f\u7684\u76ee\u7684\u662f\u5229\u7528python\u53ef\u4ee5\u540c\u65f6\u8d4b\u503c\u7684\u7279\u70b9\uff0c\u5143\u7ec4\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u53ef\u4ee5\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf\uff08\u76f8\u5f53\u4e8e\u53bb\u62ec\u53f7\uff09\uff0c\u5217\u8868\u63a8\u5bfc\u5f0f\u5219\u53ea\u80fd\u8fd4\u56de\u4e00\u4e2a\u5217\u8868 x , y 1 2 3 4 5 6 7 23 45 (23, 45)","title":"1.3\u5b57\u7b26\u4e32"},{"location":"pythoninput/#14","text":"1 2 x = eval ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u4e32\u3001\u751a\u81f3\u53ef\u4ee5\u662f\u96c6\u5408\u3001\u5b57\u5178\u3001\u5143\u7ec4\u3001\u5217\u8868\u548c\u516c\u5f0f x #\u96c6\u5408\u4e3a\u4e86\u4fdd\u8bc1\u5143\u7d20\u7684\u4e92\u5f02\u6027\uff0c\u4f1a\u4e3b\u52a8\u53bb\u91cd 1 2 3 4 5 6 7 {1,2,3,3,4,4,5} {1, 2, 3, 4, 5} 1 list ( set ([ 1 , 2 , 3 , 3 , 4 , 4 , 5 ])) #python\u7ecf\u5e38\u7528\u96c6\u5408\u6765\u53bb\u91cd 1 [1, 2, 3, 4, 5] 1 x [ 0 ] #\u96c6\u5408\u662f\u65e0\u5e8f\u7684\uff0c\u4e0d\u80fd\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee\u5143\u7d20 1 2 3 4 5 6 7 8 9 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-24-5f13ffb01050> in <module> ----> 1 x[0]#\u96c6\u5408\u662f\u65e0\u5e8f\u7684\uff0c\u4e0d\u80fd\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee\u5143\u7d20 TypeError: 'set' object is not subscriptable 1 2 3 x . add ( 7 ) x . remove ( 4 ) x #\u96c6\u5408\u7c7b\u4f3c\u4e8e\u6808\uff0c\u53ef\u4ee5pop\u548cpush\u6216\u8005add\u548cremove\uff0c\u662f\u53ef\u53d8\u6570\u636e\u7c7b\u578b 1 {1, 2, 3, 5, 7}","title":"1.4\u96c6\u5408"},{"location":"pythoninput/#15","text":"1 2 3 x = eval ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u4e32\u3001\u751a\u81f3\u53ef\u4ee5\u662f\u96c6\u5408\u3001\u5b57\u5178\u3001\u5143\u7ec4\u3001\u5217\u8868\u548c\u516c\u5f0f x #\u4efb\u610f\u7684\u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b(hashable)\uff08\u53ea\u9700\u8981\u8bb0\u4f4f\u5217\u8868list\u3001\u96c6\u5408set\u3001\u5b57\u5178dict\u4e0d\u80fd\u4f5c\u4e3akey\u5c31\u884c\uff09\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u952e\u503c\uff0c\u4e14'1'\u4e0e1\u4e0d\u540c\u3002 #\u5982\u679c\u4e00\u4e2a\u952e\u5bf9\u5e94\u591a\u4e2a\u503c\uff0c\u4ee5\u952e\u5165\u65f6\u6700\u540e\u7684\u503c\u4e3a\u952e\u5bf9\u5e94\u7684\u503c 1 2 3 4 5 6 7 {'1':2,3:4,(5,6):'7',1:8,'3':9,'a':10,'a':233} {'1': 2, 3: 4, (5, 6): '7', 1: 8, '3': 9, 'a': 233} 1 {[ 1 , 2 , 3 ]: 2 } #\u53ef\u53d8\u6570\u636e\u7c7b\u578b\u4e0d\u80fd\u4f5c\u4e3a\u952e\u503c 1 2 3 4 5 6 7 8 9 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-27-4d69b2f3e39b> in <module> ----> 1 {[1,2,3]:2}#\u53ef\u53d8\u6570\u636e\u7c7b\u578b\u4e0d\u80fd\u4f5c\u4e3a\u952e\u503c TypeError: unhashable type: 'list' 1 2 3 4 5 6 7 8 9 #\u5b57\u5178\u5e38\u7528\u6765\u7edf\u8ba1\u6587\u672c\u4e2d\u5b57\u7b26\u51fa\u73b0\u7684\u5b57\u6570\uff0c\u56e0\u6b64\u88ab\u53eb\u505a\u5b57\u5178 text = 'absjddsfnhjfsakjfnajscndsjfjcndjzcssjaknfcas' dct = {} for i in text : if i not in dct : #in\u5173\u952e\u5b57\u540e\u9762\u4e00\u822c\u90fd\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61 dct [ i ] = 1 else : dct [ i ] += 1 #python\u6ca1\u6709++/-- dct 1 2 3 4 5 6 7 8 9 10 11 {'a': 5, 'b': 1, 's': 8, 'j': 8, 'd': 4, 'f': 5, 'n': 5, 'h': 1, 'k': 2, 'c': 4, 'z': 1}","title":"1.5\u5b57\u5178"},{"location":"pythoninput/#16","text":"1 2 x = eval ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u4e32\u3001\u751a\u81f3\u53ef\u4ee5\u662f\u96c6\u5408\u3001\u5b57\u5178\u3001\u5143\u7ec4\u3001\u5217\u8868\u548c\u516c\u5f0f x 1 2 3 4 5 6 7 (1,2,3,3,4,4,5) (1, 2, 3, 3, 4, 4, 5) 1 x [ 0 ] #\u5143\u7ec4\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee 1 1 1 2 3 print ( x + ( 2 , 3 )) #\u62fc\u63a5\u4e0d\u4f1a\u4fee\u6539\u5143\u7ec4\u672c\u8eab #\u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u65e0\u6cd5\u901a\u8fc7\u5143\u7d20\u4fee\u6539\u5143\u7ec4 x 1 2 3 4 5 6 7 (1, 2, 3, 3, 4, 4, 5, 2, 3) (1, 2, 3, 3, 4, 4, 5) 1 2 3 #\u540c\u65f6\u8d4b\u503c\u7684\u672c\u8d28\u662f\u5143\u7ec4\u53bb\u62ec\u53f7 a1 , a2 , a3 , a4 = 'a' , 2 ,[ 1 , '2' ],( 2 , 3 ) a1 , a2 , a3 , a4 1 ('a', 2, [1, '2'], (2, 3)) 1 2 3 4 5 6 x = 1 y = 1 #\u8fd0\u7528\u540c\u65f6\u8d4b\u503c\u6765\u5904\u7406\u6590\u6ce2\u90a3\u5951\u6570\u5217 for i in range ( 10 ): print ( x ) x , y = y , x + y 1 2 3 4 5 6 7 8 9 10 1 1 2 3 5 8 13 21 34 55","title":"1.6\u5143\u7ec4"},{"location":"pythoninput/#17","text":"1 2 x = eval ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u4e32\u3001\u751a\u81f3\u53ef\u4ee5\u662f\u96c6\u5408\u3001\u5b57\u5178\u3001\u5143\u7ec4\u3001\u5217\u8868\u548c\u516c\u5f0f x 1 2 3 4 5 6 7 [1,2,3,3,4,4,5] [1, 2, 3, 3, 4, 4, 5] 1 x [ 0 ] #\u5217\u8868\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee 1 1 1 2 print ( x + [ 2 ]) #\u62fc\u63a5\u4e0d\u4f1a\u4fee\u6539\u5217\u8868\u672c\u8eab x 1 2 3 4 5 6 7 [1, 2, 3, 3, 4, 4, 5, 2] [1, 2, 3, 3, 4, 4, 5] 1 2 3 x . extend ([ 2 , 3 ]) #extend\u51fd\u6570\u52a0\u53ef\u8fed\u4ee3\u5bf9\u8c61 x . extend (( 1 , 2 )) #extend\u51fd\u6570\u52a0\u53ef\u8fed\u4ee3\u5bf9\u8c61 x 1 [1, 2, 3, 3, 4, 4, 5, 2, 3, 1, 2] 1 2 3 4 x . append ( 5 ) #append\u51fd\u6570\u52a0\u5bf9\u8c61 x . append ([ 'a' , 'c' ]) #append\u4e0d\u4f1a\u628a\u8fed\u4ee3\u5bf9\u8c61\u62c6\u5f00\u6210\u591a\u4e2a\u5143\u7d20 x . append (( 3 , 4 )) x 1 [1, 2, 3, 3, 4, 4, 5, 2, 3, 1, 2, 5, ['a', 'c'], (3, 4)]","title":"1.7\u5217\u8868"},{"location":"pythoninput/#eval","text":"1 2 x = eval ( input ()) #\u8bfb\u53d6\u4e00\u4e2a\u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u4e32\u3001\u751a\u81f3\u53ef\u4ee5\u662f\u96c6\u5408\u3001\u5b57\u5178\u3001\u5143\u7ec4\u3001\u5217\u8868\u548c\u516c\u5f0f x 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 x*2 [1, 2, 3, 3, 4, 4, 5, 2, 3, 1, 2, 5, ['a', 'c'], (3, 4), 1, 2, 3, 3, 4, 4, 5, 2, 3, 1, 2, 5, ['a', 'c'], (3, 4)] 1 '123' * 2 ,[ 1 , 2 , 3 ] * 3 ,( 1 , 2 , 3 ) * 2 #\u5b57\u7b26\u4e32\uff0c\u5217\u8868,\u5143\u7ec4\u867d\u7136\u4e0d\u53ef\u4ee5\u548c\u6570\u5b57\u76f8\u52a0\uff0c\u4f46\u662f\u53ef\u4ee5\u548c\u6574\u578b\u6570\u5b57\u76f8\u4e58\uff0c\u8868\u793a\u6210\u500d\u653e\u5927\u5b57\u7b26\u4e32 1 ('123123', [1, 2, 3, 1, 2, 3, 1, 2, 3], (1, 2, 3, 1, 2, 3)) 1 { '1' : 2 , '2' : 3 } * 2 #\u5b57\u5178\u3001\u96c6\u5408\u7531\u4e8e\u8981\u6c42\u952e\u503c\u3001\u5143\u7d20\u7684\u4e92\u5f02\u6027\uff0c\u4e0d\u53ef\u4ee5\u548c\u6574\u578b\u6570\u5b57\u76f8\u4e58 1 2 3 4 5 6 7 8 9 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-41-3f59c8c7dcb2> in <module> ----> 1 {'1':2,'2':3}*2#\u5b57\u5178\u3001\u96c6\u5408\u7531\u4e8e\u8981\u6c42\u952e\u503c\u3001\u5143\u7d20\u7684\u4e92\u5f02\u6027\uff0c\u4e0d\u53ef\u4ee5\u548c\u6574\u578b\u6570\u5b57\u76f8\u4e58 TypeError: unsupported operand type(s) for *: 'dict' and 'int'","title":"eval\u8fd8\u53ef\u4ee5\u5904\u7406\u6570\u5b66\u516c\u5f0f"},{"location":"sjhnb/","text":"Author: Jiahong Shao 2.\u6761\u4ef6\u3001\u5faa\u73af\u548c\u8f93\u51fa\u63a7\u5236 \u00b6 python\u7684\u8f93\u51fa\u51fd\u6570\u5bf9\u4e8e\u84dd\u6865\u676f\u6765\u8bf4\u53ea\u6709print()\u6709\u7528\uff0c\u5176\u4ed6\u7684\u5199\u6587\u4ef6\u7684\u51fd\u6570\u4e00\u5b9a\u4e0d\u4f1a\u7528\u5230\uff0c\u4ee5\u6761\u4ef6\u3001\u5faa\u73af\u4e3a\u7ebf\u7d22\u7a7f\u63d2\u7740\u63d0\u53caprint\u7684\u683c\u5f0f\u5316\u8f93\u51fa\u7528\u6cd5\u4ee5\u53caprint\u51fd\u6570\u5e38\u7528\u5f62\u53c2 2.1 if\u8bed\u53e5 \u00b6 2.1.1 ==\u548cis\u7684\u533a\u522b\uff08!=\u548c is not\u7684\u533a\u522b\u7c7b\u4f3c\u4e0d\u518d\u8d58\u8ff0\uff09 \u00b6 python\u5f15\u7528\u548c\u5bf9\u8c61\u662f\u5206\u79bb\u7684\u3002==\u662f\u7528\u6765\u5224\u65ad\u76f8\u7b49\uff08\u503c\u76f8\u7b49\uff09\uff0c\u800cis\u662f\u7528\u6765\u5224\u65ad\u540c\u4e00\uff08\u5730\u5740\u540c\u4e00\uff09 1 2 a = b = 2333 a == b , a is b 1 (True, True) 1 2 a , b = 2333 , 2333 a == b , a is b 1 (True, True) 1 2 3 a = 2333 b = 2333 a == b , a is b 1 (True, False) 1 2 3 #\u5199\u5728\u540c\u4e00\u884c\u65f6\u4e5f\u4f1a\u5206\u914d\u540c\u4e00\u4e2a\u5730\u5740\uff0c\u4f46\u662f\u5728notebook\u91cc\u51fa\u9519\u4e86 from IPython.display import Image Image ( \"1.jpg\" ) 1 2 3 4 5 #\u7531\u4e8epython\u5f15\u7528\u548c\u5bf9\u8c61\u662f\u5206\u79bb\u7684\uff0c\u5982\u679c\u9700\u8981\u5907\u4efd\u4e00\u4e2a\u5217\u8868\u3001\u96c6\u5408\u3001\u5b57\u5178\u7b49\u53ef\u53d8\u6570\u636e\u7c7b\u578b\u65f6\uff0c\u9700\u8981\u8c03\u7528\u62f7\u8d1d\u51fd\u6570 a = [ 1 , 2 , 3 , 4 ] b = a a [ 0 ] = 9 b 1 [9, 2, 3, 4] 1 2 3 4 a = [ 1 , 2 , 3 , 4 ] b = a . copy () #\u6d45\u62f7\u8d1d\u51fd\u6570 a [ 0 ] = 9 b 1 [1, 2, 3, 4] 1 2 3 4 5 #\u5982\u679c\u5bf9\u5185\u5c42\u53ef\u53d8\u6570\u636e\u7c7b\u578b\u66f4\u6539\uff0c\u9700\u8981\u6df1\u62f7\u8d1d a = [[ 1 , 2 , 3 , 4 ], 5 , 6 , 7 ] b = a . copy () a [ 0 ][ 0 ] = 9 b 1 [[9, 2, 3, 4], 5, 6, 7] 1 2 3 4 5 import copy a = [[ 1 , 2 , 3 , 4 ], 5 , 6 , 7 ] b = copy . deepcopy ( a ) #\u8c03\u7528\u6df1\u62f7\u8d1d\u624d\u80fd\u907f\u514d\u5185\u5c42\u53ef\u53d8\u6570\u636e\u7c7b\u578b\u7684\u66f4\u6539 a [ 0 ][ 0 ] = 9 b 1 [[1, 2, 3, 4], 5, 6, 7] 1 2 3 4 5 #\u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b\u4e0d\u7528\u62c5\u5fc3\u4f1a\u66f4\u6539 a = \"123\" b = a a . replace ( '1' , '9' ) b 1 '123' 2.1.2 in\u548cisinstance\u7684\u533a\u522b \u00b6 in\u7528\u4e8e\u5224\u65ad\u5143\u7d20\u662f\u5426\u5728\u5bb9\u5668\u91cc\uff0cisinstance\u7528\u4e8e\u5224\u65ad\u5143\u7d20\u662f\u5426\u662f\u5b9e\u4f8b\uff08\u7c7b\u4f3c\u4e8ejava\uff09 1 5 in [ 1 , 2 , 3 , 4 , 5 ], isinstance ( 5 , list ) 1 (True, False) 1 2 #\u4e0d\u80fd\u5224\u65ad\u6570\u5b57\u5728\u5b57\u7b26\u4e32\u91cc 233 in '233' 1 2 3 4 5 6 7 8 9 10 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-11-70a584daee4b> in <module> 1 #\u4e0d\u80fd\u5224\u65ad\u6570\u5b57\u5728\u5b57\u7b26\u4e32\u91cc ----> 2 233 in '233' TypeError: 'in <string>' requires string as left operand, not int 1 2 #\u5217\u8868\u91cc\u662f\u5b57\u7b26\u4e32\uff0c\u4e5f\u4e0d\u80fd\u5224\u65ad\u6570\u5b57\u5728\u5b57\u7b26\u4e32\u91cc\uff1b\u5c0f\u5b57\u7b26\u4e32\u5728\u5927\u5b57\u7b26\u4e32\u91cc\uff0c\u4e5f\u4e0d\u4f1a\u8ba4\u4e3a\u5c0f\u5b57\u7b26\u4e32\u5728\u5927\u5b57\u7b26\u4e32\u6240\u5728\u7684\u5217\u8868\u91cc\uff08in\u53ea\u8003\u8651\u4e00\u5c42\u7684\u5173\u7cfb\uff09 233 not in [ '233' ], '2' in '233' , '2' in [ '233' ], 1 (True, True, False) 2.1.3 \u7279\u6b8a\u7c7b\u578b\u6bd4\u5927\u5c0f \u00b6 1 2 #\u5b57\u7b26\u4e32\u3001\u5217\u8868\u3001\u96c6\u5408\u3001\u5143\u7ec4\u90fd\u53ef\u4ee5\u6bd4\u5927\u5c0f\uff08\u6309\u5143\u7d20\u6392\u597d\u5e8f\u540e\u6bd4\u5927\u5c0f\uff09 \"233\" > \"5\" ,[ 1 , 2 , 3 , 4 ] < [ 2 , 3 , 4 ],{ 3 , 4 , 5 } >= { 7 , 8 },( 2 , 3 , 4 ) <= ( 6 , 7 , 8 , 9 ) 1 (False, True, False, True) 1 2 #\u5982\u679c\u957f\u5ea6\u4e0d\u4e00\u81f4\uff0c\u4e14\u524d\u9762\u6bd4\u8f83\u5b8c\u5168\u4e00\u81f4\u65f6\uff0c\u957f\u5ea6\u957f\u7684\u66f4\u5927 [ 1 , 2 , 3 , 0 ] > [ 1 , 2 , 3 ],[ 1 , 2 , 3 , - 3 ] > [ 1 , 2 , 3 ] 1 (True, True) 1 2 #\u5b57\u5178\u65e0\u6cd5\u6bd4\u8f83\u5927\u5c0f { '1' : 2 } < { '2' : 3 } 1 2 3 4 5 6 7 8 9 10 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-15-51ea4a8e5b7d> in <module> 1 #\u5b57\u5178\u65e0\u6cd5\u6bd4\u8f83\u5927\u5c0f ----> 2 {'1':2}<{'2':3} TypeError: '<' not supported between instances of 'dict' and 'dict' 1 bool ( '' ), bool ([]), bool (()), bool ({}), bool ( \"\" ), bool ( 0 ), bool ( None ) #None\u4e00\u822c\u662f\u6d41\u8bfb\u53d6\u65f6\u7528\u5230\uff0c\u76f8\u5f53\u4e8ec/c++\u4e2d\u7684NULL 1 (False, False, False, False, False, False, False) 1 '' == None 1 False 2.1.4 \u8bed\u53e5\u5757 \u00b6 python\u975e\u5e38\u6ce8\u91cd\u7f29\u8fdb\uff0c\u4e0d\u9700\u8981\u5199\u5206\u53f7\uff0c\u5927\u62ec\u53f7\u4e5f\u4e0d\u4ee3\u8868\u51fd\u6570\u4f53\u548c\u5faa\u73af\u4f53\uff0c\u9700\u8981\u901a\u8fc7\u5192\u53f7\u548c\u7f29\u8fdb\u6765\u5224\u65ad\u8bed\u53e5\u5757 python\u683c\u5f0f\u5316\u8f93\u51fa\u4e0ec\u8bed\u8a00\u7684printf\u51e0\u4e4e\u4e00\u6837\uff0c\u4f46\u662f\u4e0d\u662f\u7528\u9017\u53f7\u5c06\u5b57\u7b26\u4e32\u548c\u8f93\u51fa\u7684\u5185\u5bb9\u9694\u5f00\uff0c\u800c\u662f\u901a\u8fc7%()\u6765\u786e\u8ba4\u683c\u5f0f\u5316\u8f93\u51fa\u7684\u5185\u5bb9\u3002\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u8f93\u51fa\u7684\u6570\u5b57\u53ef\u4ee5\u4e0d\u7528\u52a0\u62ec\u53f7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 x = 5 #\u5982\u679c\u4e0d\u52a0else\u6240\u6709if\u4f9d\u6b21\u6267\u884c if x > 3 : print ( '\u8f93\u51fa1\uff1a %d >3' % ( x )) x += 1 print ( '\u8f93\u51fa2\uff1ax= %d ' % ( x )) if x > 5 : print ( '\u8f93\u51fa3\uff1a %d >5' % ( x )) x += 1 print ( '\u8f93\u51fa4\uff1ax= %d ' % ( x )) #\u52a0\u4e86else\u9009\u62e9\u7b26\u5408\u7684\u4ee3\u7801\u6bb5\u6267\u884c if x > 3 : print ( '\u8f93\u51fa5\uff1a %d >3' % ( x )) x -= 6 print ( '\u8f93\u51fa6\uff1ax= %d ' % ( x )) else : print ( '\u8f93\u51fa7\uff1a %d <3' % ( x )) x += 6 print ( '\u8f93\u51fa8\uff1ax= %d ' % ( x )) #else if\u5728python\u7b80\u5199\u4e3aelif if x > 3 : print ( '\u8f93\u51fa9\uff1a %d >3' % ( x )) x -= 6 print ( '\u8f93\u51fa10\uff1ax= %d ' % ( x )) elif x < 2 : print ( '\u8f93\u51fa11\uff1a %d <2' % ( x )) x += 6 print ( '\u8f93\u51fa12\uff1ax= %d ' % ( x )) else : print ( '\u8f93\u51fa13\uff1a2<= %d <=3' % ( x )) x += 6 print ( '\u8f93\u51fa14\uff1ax= %d ' % ( x )) 1 2 3 4 5 6 7 8 \u8f93\u51fa1\uff1a5>3 \u8f93\u51fa2\uff1ax=6 \u8f93\u51fa3\uff1a6>5 \u8f93\u51fa4\uff1ax=7 \u8f93\u51fa5\uff1a7>3 \u8f93\u51fa6\uff1ax=1 \u8f93\u51fa11\uff1a1<2 \u8f93\u51fa12\uff1ax=7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #else if\u4f1a\u683c\u5f0f\u9519\u8bef x = 5 if x > 3 : print ( '\u8f93\u51fa9\uff1a %d >3' % ( x )) x -= 6 print ( '\u8f93\u51fa10\uff1ax= %d ' % ( x )) else if x < 2 : print ( '\u8f93\u51fa11\uff1a %d <2' % ( x )) x += 6 print ( '\u8f93\u51fa12\uff1ax= %d ' % ( x )) else : print ( '\u8f93\u51fa13\uff1a2<= %d <=3' % ( x )) x += 6 print ( '\u8f93\u51fa14\uff1ax= %d ' % ( x )) 1 2 3 4 File \"<ipython-input-19-421847da3eba>\", line 7 else if x<2: ^ SyntaxError: invalid syntax 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #\u683c\u5916\u9700\u8981\u6ce8\u91cd\u7f29\u8fdb\u4e00\u81f4\uff01\uff01\uff01\u5426\u5219\u4e0d\u4f1a\u88ab\u5f53\u505aif\u8bed\u53e5\u5757\u7684\u5185\u5bb9\u800c\u662fmain\u51fd\u6570\u7684\u5185\u5bb9 x = 5 #\u5982\u679c\u4e0d\u52a0else\u6240\u6709if\u4f9d\u6b21\u6267\u884c if x > 3 : print ( '\u8f93\u51fa1\uff1a %d >3' % ( x )) x += 1 print ( '\u8f93\u51fa2\uff1ax= %d ' % ( x )) if x > 5 : print ( '\u8f93\u51fa3\uff1a %d >5' % ( x )) x += 1 print ( '\u8f93\u51fa4\uff1ax= %d ' % ( x )) #\u52a0\u4e86else\u9009\u62e9\u7b26\u5408\u7684\u4ee3\u7801\u6bb5\u6267\u884c if x > 3 : print ( '\u8f93\u51fa5\uff1a %d >3' % ( x )) x -= 6 print ( '\u8f93\u51fa6\uff1ax= %d ' % ( x )) else : print ( '\u8f93\u51fa7\uff1a %d <3' % ( x )) x += 6 print ( '\u8f93\u51fa8\uff1ax= %d ' % ( x )) #else if\u5728python\u7b80\u5199\u4e3aelif if x > 3 : print ( '\u8f93\u51fa9\uff1a %d >3' % ( x )) x -= 6 print ( '\u8f93\u51fa10\uff1ax= %d ' % ( x )) elif x < 2 : print ( '\u8f93\u51fa11\uff1a %d <2' % ( x )) x += 6 print ( '\u8f93\u51fa12\uff1ax= %d ' % ( x )) else : print ( '\u8f93\u51fa13\uff1a2<= %d <=3' % ( x )) x += 6 print ( '\u8f93\u51fa14\uff1ax= %d ' % ( x )) 1 2 3 4 5 6 7 8 9 10 \u8f93\u51fa1\uff1a5>3 \u8f93\u51fa2\uff1ax=6 \u8f93\u51fa3\uff1a6>5 \u8f93\u51fa4\uff1ax=7 \u8f93\u51fa5\uff1a7>3 \u8f93\u51fa6\uff1ax=1 \u8f93\u51fa8\uff1ax=7 \u8f93\u51fa9\uff1a7>3 \u8f93\u51fa10\uff1ax=1 \u8f93\u51fa14\uff1ax=7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #if\u8bed\u53e5\u5757\u4e2d\u7f29\u8fdb\u4e0d\u5bf9\uff0c\u4e5f\u4f1a\u51fa\u73b0\u683c\u5f0f\u9519\u8bef\uff08elif\u524d\u6ca1\u6709if\uff09 x = 5 if x > 3 : print ( '\u8f93\u51fa9\uff1a %d >3' % ( x )) x -= 6 print ( '\u8f93\u51fa10\uff1ax= %d ' % ( x )) elif x < 2 : print ( '\u8f93\u51fa11\uff1a %d <2' % ( x )) x += 6 print ( '\u8f93\u51fa12\uff1ax= %d ' % ( x )) else : print ( '\u8f93\u51fa13\uff1a2<= %d <=3' % ( x )) x += 6 print ( '\u8f93\u51fa14\uff1ax= %d ' % ( x )) 1 2 3 4 File \"<ipython-input-21-e776facb8e49>\", line 7 elif x<2: ^ SyntaxError: invalid syntax 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #\u7f29\u8fdb\u4e0d\u4e00\u81f4\uff0c\u4f1a\u62a5\u7f29\u8fdb\u9519\u8bef x = 5 if x > 3 : print ( '\u8f93\u51fa9\uff1a %d >3' % ( x )) x -= 6 print ( '\u8f93\u51fa10\uff1ax= %d ' % ( x )) elif x < 2 : print ( '\u8f93\u51fa11\uff1a %d <2' % ( x )) x += 6 print ( '\u8f93\u51fa12\uff1ax= %d ' % ( x )) else : print ( '\u8f93\u51fa13\uff1a2<= %d <=3' % ( x )) x += 6 print ( '\u8f93\u51fa14\uff1ax= %d ' % ( x )) 1 2 3 4 File \"<ipython-input-22-9c0c4799b2e2>\", line 5 x-=6 ^ IndentationError: unexpected indent python\u6ca1\u6709switch\u8bed\u53e5\u5757\uff0c\u9700\u8981\u7528if\u2026\u2026elif\u2026\u2026else\u66ff\u4ee3 1 2 switch ( x ): case 1 : break ; 1 2 3 4 File \"<ipython-input-23-fed740f67d10>\", line 1 switch(x): ^ SyntaxError: invalid syntax 2.2 while\u8bed\u53e5 \u00b6 python\u4e2dwhile\u8bed\u53e5\u548cc/c++\u51e0\u4e4e\u4e00\u81f4 1 2 3 4 5 6 7 #\u5e38\u89c1\u9519\u8bef\uff0c\u6d6e\u70b9\u6570\u548c\u6574\u6570\u6bd4\u76f8\u7b49\u5bb9\u6613\u4f1a\u65e0\u9650\u5faa\u73af x = 2.0 while x != 1 : print ( x ) x -= 0.1 if ( x <- 1 ): break 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 2.0 1.9 1.7999999999999998 1.6999999999999997 1.5999999999999996 1.4999999999999996 1.3999999999999995 1.2999999999999994 1.1999999999999993 1.0999999999999992 0.9999999999999992 0.8999999999999992 0.7999999999999993 0.6999999999999993 0.5999999999999993 0.49999999999999933 0.39999999999999936 0.2999999999999994 0.19999999999999937 0.09999999999999937 -6.38378239159465e-16 -0.10000000000000064 -0.20000000000000065 -0.30000000000000066 -0.4000000000000007 -0.5000000000000007 -0.6000000000000006 -0.7000000000000006 -0.8000000000000006 -0.9000000000000006 1 2 3 4 5 6 7 #\u53ea\u6709\u8fd9\u79cd\u60c5\u51b5\u4e0b\u624d\u4e0d\u4f1a\u5728\u7cbe\u5ea6\u51fa\u95ee\u9898 x = 10.0 while x != 1 : print ( x ) x -= 1 if ( x <- 1 ): break 1 2 3 4 5 6 7 8 9 10.0 9.0 8.0 7.0 6.0 5.0 4.0 3.0 2.0 1 2 3 #python3.8\u65b0\u589e\uff1a\u6d77\u8c61\u8868\u8fbe\u5f0f,\u53ef\u4ee5\u8d4b\u503c\u7684\u540c\u65f6\u8fdb\u884c\u6bd4\u8f83\u8fd0\u7b97\u548c\u5224\u7b49\u8fd0\u7b97 while ( x := int ( input ())) < 9 : print ( '\u8f93\u5165\u7684\u662f {} ' . format ( x )) #\u683c\u5f0f\u5316\u8f93\u51fa\u7684\u53e6\u4e00\u4e2a\u683c\u5f0f\uff0c\u8c03\u7528\u5b57\u7b26\u4e32\u7684format\u51fd\u6570 1 2 3 4 5 6 7 8 9 1 \u8f93\u5165\u7684\u662f1 3 \u8f93\u5165\u7684\u662f3 5 \u8f93\u5165\u7684\u662f5 7 \u8f93\u5165\u7684\u662f7 9 1 2 3 4 5 6 7 #\u6ca1\u6709\u6d77\u8c61\u8868\u8fbe\u5f0f\uff0c\u5f97\u8fd9\u4e48\u5199 x = int ( input ()) while x < 9 : print ( '\u8f93\u5165\u7684\u662f {xx} ' . format ( xx = x )) #format\u53ef\u4ee5\u5728\u62ec\u53f7\u91cc\u5199\u4e0a\u6a21\u677f\u540d\u5b57 print ( '\u8f93\u5165\u7684\u662f {xx} \uff0cx**2= {yy} ,x= {xx} ' . format ( xx = x , yy = x ** 2 )) #\u5982\u679c\u6709\u591a\u5904\u9700\u8981\u8f93\u51fa\u4e00\u6837\u7684\u5185\u5bb9\uff0c\u63a8\u8350\u4f7f\u7528\u6a21\u677f print ( '\u8f93\u5165\u7684\u662f {} \uff0cx**2= {} ,x= {} ' . format ( x , x ** 2 , x )) #\u4e0e\u4e0a\u9762\u7b49\u4ef7 x = int ( input ()) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 1 \u8f93\u5165\u7684\u662f1 \u8f93\u5165\u7684\u662f1\uff0cx**2=1,x=1 \u8f93\u5165\u7684\u662f1\uff0cx**2=1,x=1 3 \u8f93\u5165\u7684\u662f3 \u8f93\u5165\u7684\u662f3\uff0cx**2=9,x=3 \u8f93\u5165\u7684\u662f3\uff0cx**2=9,x=3 5 \u8f93\u5165\u7684\u662f5 \u8f93\u5165\u7684\u662f5\uff0cx**2=25,x=5 \u8f93\u5165\u7684\u662f5\uff0cx**2=25,x=5 7 \u8f93\u5165\u7684\u662f7 \u8f93\u5165\u7684\u662f7\uff0cx**2=49,x=7 \u8f93\u5165\u7684\u662f7\uff0cx**2=49,x=7 9 2.3 for\u8bed\u53e5 \u00b6 1 2 3 4 x , y = 1 , 1 for i in range ( 20 ): #\u7c7b\u4f3c\u4e8ejava\u7684\u9ad8\u7ea7for\u5faa\u73af\uff0c\u7b49\u4ef7\u4e8erange(0,20,1) print ( x , end = ' ' ) #\u63a7\u5236\u4ee5' '\u4e3a\u8f93\u51fa\u7ed3\u675f\u7b26\uff0c\u9ed8\u8ba4\u4e3a'\\n' x , y = y , x + y 1 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 1 2 3 4 #range(a,b,c)\u51fd\u6570\u901a\u5e38\u7528\u4e8e\u8fed\u4ee3\uff0c\u751f\u6210\u8d77\u59cb\u4f4da(\u53d6\u5f97\u5230a\uff0c\u9ed8\u8ba4\u4e3a0)\uff0c\u7ec8\u6b62\u4e3ab(\u53d6\u4e0d\u5230b)\uff0c\u6b65\u957f\u4e3ac\uff08\u9ed8\u8ba4\u4e3a1\uff0c\u53ef\u4ee5\u4e3a\u8d1f\u6570\uff09\u7684\u4e00\u7cfb\u5217\u6574\u578b #\u5b9e\u578b\u9700\u8981\u7528\u5230numpy\u5e93\u800c\u84dd\u6865\u676f\u4e0d\u5141\u8bb8 for i in range ( 21 , 1 , - 2 ): print ( i , end = ',' ) #\u63a7\u5236\u4ee5','\u4e3a\u8f93\u51fa\u7ed3\u675f\u7b26\uff0c\u9ed8\u8ba4\u4e3a'\\n' 1 21,19,17,15,13,11,9,7,5,3, 1 2 3 4 #\u7528\u5217\u8868\u63a8\u5bfc\u5f0f\u751f\u621010*10\u7684\u968f\u673a\u77e9\u9635 import random lst = [[ random . randint ( 0 , 20 ) for i in range ( 10 )] for j in range ( 10 )] lst 1 2 3 4 5 6 7 8 9 10 [[6, 7, 0, 16, 3, 16, 20, 12, 15, 11], [17, 4, 0, 5, 3, 19, 3, 2, 10, 11], [0, 2, 4, 10, 0, 16, 7, 2, 20, 9], [9, 2, 17, 19, 1, 5, 18, 3, 7, 7], [15, 0, 16, 7, 14, 5, 14, 18, 12, 20], [2, 11, 17, 19, 7, 14, 18, 20, 9, 7], [8, 15, 14, 5, 15, 10, 15, 14, 6, 1], [19, 9, 3, 1, 6, 13, 8, 1, 18, 20], [9, 17, 6, 8, 12, 13, 20, 11, 19, 20], [11, 9, 14, 20, 9, 8, 9, 1, 19, 18]] 1 2 3 4 for i in lst : for j in i : print ( ' %2d ' % j , end = ' ' ) print () #\u8f93\u51fa'\\n',\u7b49\u4ef7\u4e8ec\u8bed\u8a00\u7684puts(\"\") 1 2 3 4 5 6 7 8 9 10 6 7 0 16 3 16 20 12 15 11 17 4 0 5 3 19 3 2 10 11 0 2 4 10 0 16 7 2 20 9 9 2 17 19 1 5 18 3 7 7 15 0 16 7 14 5 14 18 12 20 2 11 17 19 7 14 18 20 9 7 8 15 14 5 15 10 15 14 6 1 19 9 3 1 6 13 8 1 18 20 9 17 6 8 12 13 20 11 19 20 11 9 14 20 9 8 9 1 19 18 1 2 3 4 5 #\u5982\u679c\u60f3\u8981\u901a\u8fc7\u4e0b\u6807\u7684\u65b9\u5f0f\u6765\u7d22\u5f15\u4e8c\u7ef4\u6570\u7ec4\uff0c\u9700\u8981\u8fd9\u6837\u5199 for i in range ( len ( lst )): for j in range ( len ( lst [ i ])): print ( ' %2d ' % lst [ i ][ j ], end = ' ' ) print () #\u8f93\u51fa'\\n',\u7b49\u4ef7\u4e8ec\u8bed\u8a00\u7684puts(\"\") 1 2 3 4 5 6 7 8 9 10 6 7 0 16 3 16 20 12 15 11 17 4 0 5 3 19 3 2 10 11 0 2 4 10 0 16 7 2 20 9 9 2 17 19 1 5 18 3 7 7 15 0 16 7 14 5 14 18 12 20 2 11 17 19 7 14 18 20 9 7 8 15 14 5 15 10 15 14 6 1 19 9 3 1 6 13 8 1 18 20 9 17 6 8 12 13 20 11 19 20 11 9 14 20 9 8 9 1 19 18 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #\u8f93\u51fa\u5b57\u5178\u7684\u952e\u503c\u5bf9\u5173\u7cfb stock = { '10005' : { 'name' : 'Conference Pears Loose' , 'price' : 2.00 , 'unit' : 'kg' , 'promotion' : None , 'group' : None , 'amount' : 1.550 }, '10013' : { 'name' : 'Emmental Slices 250G' , 'price' : 1.75 , 'unit' : 'pieces' , 'promotion' : 'get2pay1' , 'group' : None , 'amount' : 9 }, '10015' : { 'name' : 'Diced Beef 400G' , 'price' : 4.50 , 'unit' : 'pieces' , 'promotion' : 'get4pay3' , 'group' : 4 , 'amount' : 14 }, } for key , value in stock . items (): print ( key , end = ': \\n ' ) for innerkey , innervalue in stock [ key ] . items (): #\u5b57\u5178\u53ef\u4ee5\u901a\u8fc7key\u6765\u7d22\u5f15 print ( innerkey , innervalue , sep = ':' ) #\u7528\u5192\u53f7\u9694\u5f00key\u548cvalue\u7684\u5185\u5bb9\uff0csep\u8868\u793a\u8f93\u51fa\u5185\u5bb9\u4e4b\u95f4\u4ee5\u4ec0\u4e48\u9694\u5f00\uff0c\u9ed8\u8ba4\u662f' ' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 10005: name:Conference Pears Loose price:2.0 unit:kg promotion:None group:None amount:1.55 10013: name:Emmental Slices 250G price:1.75 unit:pieces promotion:get2pay1 group:None amount:9 10015: name:Diced Beef 400G price:4.5 unit:pieces promotion:get4pay3 group:4 amount:14","title":"\u5faa\u73af\u3001\u6d41\u7a0b\u63a7\u5236"},{"location":"sjhnb/#2","text":"python\u7684\u8f93\u51fa\u51fd\u6570\u5bf9\u4e8e\u84dd\u6865\u676f\u6765\u8bf4\u53ea\u6709print()\u6709\u7528\uff0c\u5176\u4ed6\u7684\u5199\u6587\u4ef6\u7684\u51fd\u6570\u4e00\u5b9a\u4e0d\u4f1a\u7528\u5230\uff0c\u4ee5\u6761\u4ef6\u3001\u5faa\u73af\u4e3a\u7ebf\u7d22\u7a7f\u63d2\u7740\u63d0\u53caprint\u7684\u683c\u5f0f\u5316\u8f93\u51fa\u7528\u6cd5\u4ee5\u53caprint\u51fd\u6570\u5e38\u7528\u5f62\u53c2","title":"2.\u6761\u4ef6\u3001\u5faa\u73af\u548c\u8f93\u51fa\u63a7\u5236"},{"location":"sjhnb/#21-if","text":"","title":"2.1 if\u8bed\u53e5"},{"location":"sjhnb/#211-is-is-not","text":"python\u5f15\u7528\u548c\u5bf9\u8c61\u662f\u5206\u79bb\u7684\u3002==\u662f\u7528\u6765\u5224\u65ad\u76f8\u7b49\uff08\u503c\u76f8\u7b49\uff09\uff0c\u800cis\u662f\u7528\u6765\u5224\u65ad\u540c\u4e00\uff08\u5730\u5740\u540c\u4e00\uff09 1 2 a = b = 2333 a == b , a is b 1 (True, True) 1 2 a , b = 2333 , 2333 a == b , a is b 1 (True, True) 1 2 3 a = 2333 b = 2333 a == b , a is b 1 (True, False) 1 2 3 #\u5199\u5728\u540c\u4e00\u884c\u65f6\u4e5f\u4f1a\u5206\u914d\u540c\u4e00\u4e2a\u5730\u5740\uff0c\u4f46\u662f\u5728notebook\u91cc\u51fa\u9519\u4e86 from IPython.display import Image Image ( \"1.jpg\" ) 1 2 3 4 5 #\u7531\u4e8epython\u5f15\u7528\u548c\u5bf9\u8c61\u662f\u5206\u79bb\u7684\uff0c\u5982\u679c\u9700\u8981\u5907\u4efd\u4e00\u4e2a\u5217\u8868\u3001\u96c6\u5408\u3001\u5b57\u5178\u7b49\u53ef\u53d8\u6570\u636e\u7c7b\u578b\u65f6\uff0c\u9700\u8981\u8c03\u7528\u62f7\u8d1d\u51fd\u6570 a = [ 1 , 2 , 3 , 4 ] b = a a [ 0 ] = 9 b 1 [9, 2, 3, 4] 1 2 3 4 a = [ 1 , 2 , 3 , 4 ] b = a . copy () #\u6d45\u62f7\u8d1d\u51fd\u6570 a [ 0 ] = 9 b 1 [1, 2, 3, 4] 1 2 3 4 5 #\u5982\u679c\u5bf9\u5185\u5c42\u53ef\u53d8\u6570\u636e\u7c7b\u578b\u66f4\u6539\uff0c\u9700\u8981\u6df1\u62f7\u8d1d a = [[ 1 , 2 , 3 , 4 ], 5 , 6 , 7 ] b = a . copy () a [ 0 ][ 0 ] = 9 b 1 [[9, 2, 3, 4], 5, 6, 7] 1 2 3 4 5 import copy a = [[ 1 , 2 , 3 , 4 ], 5 , 6 , 7 ] b = copy . deepcopy ( a ) #\u8c03\u7528\u6df1\u62f7\u8d1d\u624d\u80fd\u907f\u514d\u5185\u5c42\u53ef\u53d8\u6570\u636e\u7c7b\u578b\u7684\u66f4\u6539 a [ 0 ][ 0 ] = 9 b 1 [[1, 2, 3, 4], 5, 6, 7] 1 2 3 4 5 #\u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b\u4e0d\u7528\u62c5\u5fc3\u4f1a\u66f4\u6539 a = \"123\" b = a a . replace ( '1' , '9' ) b 1 '123'","title":"2.1.1 ==\u548cis\u7684\u533a\u522b\uff08!=\u548c is not\u7684\u533a\u522b\u7c7b\u4f3c\u4e0d\u518d\u8d58\u8ff0\uff09"},{"location":"sjhnb/#212-inisinstance","text":"in\u7528\u4e8e\u5224\u65ad\u5143\u7d20\u662f\u5426\u5728\u5bb9\u5668\u91cc\uff0cisinstance\u7528\u4e8e\u5224\u65ad\u5143\u7d20\u662f\u5426\u662f\u5b9e\u4f8b\uff08\u7c7b\u4f3c\u4e8ejava\uff09 1 5 in [ 1 , 2 , 3 , 4 , 5 ], isinstance ( 5 , list ) 1 (True, False) 1 2 #\u4e0d\u80fd\u5224\u65ad\u6570\u5b57\u5728\u5b57\u7b26\u4e32\u91cc 233 in '233' 1 2 3 4 5 6 7 8 9 10 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-11-70a584daee4b> in <module> 1 #\u4e0d\u80fd\u5224\u65ad\u6570\u5b57\u5728\u5b57\u7b26\u4e32\u91cc ----> 2 233 in '233' TypeError: 'in <string>' requires string as left operand, not int 1 2 #\u5217\u8868\u91cc\u662f\u5b57\u7b26\u4e32\uff0c\u4e5f\u4e0d\u80fd\u5224\u65ad\u6570\u5b57\u5728\u5b57\u7b26\u4e32\u91cc\uff1b\u5c0f\u5b57\u7b26\u4e32\u5728\u5927\u5b57\u7b26\u4e32\u91cc\uff0c\u4e5f\u4e0d\u4f1a\u8ba4\u4e3a\u5c0f\u5b57\u7b26\u4e32\u5728\u5927\u5b57\u7b26\u4e32\u6240\u5728\u7684\u5217\u8868\u91cc\uff08in\u53ea\u8003\u8651\u4e00\u5c42\u7684\u5173\u7cfb\uff09 233 not in [ '233' ], '2' in '233' , '2' in [ '233' ], 1 (True, True, False)","title":"2.1.2 in\u548cisinstance\u7684\u533a\u522b"},{"location":"sjhnb/#213","text":"1 2 #\u5b57\u7b26\u4e32\u3001\u5217\u8868\u3001\u96c6\u5408\u3001\u5143\u7ec4\u90fd\u53ef\u4ee5\u6bd4\u5927\u5c0f\uff08\u6309\u5143\u7d20\u6392\u597d\u5e8f\u540e\u6bd4\u5927\u5c0f\uff09 \"233\" > \"5\" ,[ 1 , 2 , 3 , 4 ] < [ 2 , 3 , 4 ],{ 3 , 4 , 5 } >= { 7 , 8 },( 2 , 3 , 4 ) <= ( 6 , 7 , 8 , 9 ) 1 (False, True, False, True) 1 2 #\u5982\u679c\u957f\u5ea6\u4e0d\u4e00\u81f4\uff0c\u4e14\u524d\u9762\u6bd4\u8f83\u5b8c\u5168\u4e00\u81f4\u65f6\uff0c\u957f\u5ea6\u957f\u7684\u66f4\u5927 [ 1 , 2 , 3 , 0 ] > [ 1 , 2 , 3 ],[ 1 , 2 , 3 , - 3 ] > [ 1 , 2 , 3 ] 1 (True, True) 1 2 #\u5b57\u5178\u65e0\u6cd5\u6bd4\u8f83\u5927\u5c0f { '1' : 2 } < { '2' : 3 } 1 2 3 4 5 6 7 8 9 10 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-15-51ea4a8e5b7d> in <module> 1 #\u5b57\u5178\u65e0\u6cd5\u6bd4\u8f83\u5927\u5c0f ----> 2 {'1':2}<{'2':3} TypeError: '<' not supported between instances of 'dict' and 'dict' 1 bool ( '' ), bool ([]), bool (()), bool ({}), bool ( \"\" ), bool ( 0 ), bool ( None ) #None\u4e00\u822c\u662f\u6d41\u8bfb\u53d6\u65f6\u7528\u5230\uff0c\u76f8\u5f53\u4e8ec/c++\u4e2d\u7684NULL 1 (False, False, False, False, False, False, False) 1 '' == None 1 False","title":"2.1.3 \u7279\u6b8a\u7c7b\u578b\u6bd4\u5927\u5c0f"},{"location":"sjhnb/#214","text":"python\u975e\u5e38\u6ce8\u91cd\u7f29\u8fdb\uff0c\u4e0d\u9700\u8981\u5199\u5206\u53f7\uff0c\u5927\u62ec\u53f7\u4e5f\u4e0d\u4ee3\u8868\u51fd\u6570\u4f53\u548c\u5faa\u73af\u4f53\uff0c\u9700\u8981\u901a\u8fc7\u5192\u53f7\u548c\u7f29\u8fdb\u6765\u5224\u65ad\u8bed\u53e5\u5757 python\u683c\u5f0f\u5316\u8f93\u51fa\u4e0ec\u8bed\u8a00\u7684printf\u51e0\u4e4e\u4e00\u6837\uff0c\u4f46\u662f\u4e0d\u662f\u7528\u9017\u53f7\u5c06\u5b57\u7b26\u4e32\u548c\u8f93\u51fa\u7684\u5185\u5bb9\u9694\u5f00\uff0c\u800c\u662f\u901a\u8fc7%()\u6765\u786e\u8ba4\u683c\u5f0f\u5316\u8f93\u51fa\u7684\u5185\u5bb9\u3002\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u8f93\u51fa\u7684\u6570\u5b57\u53ef\u4ee5\u4e0d\u7528\u52a0\u62ec\u53f7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 x = 5 #\u5982\u679c\u4e0d\u52a0else\u6240\u6709if\u4f9d\u6b21\u6267\u884c if x > 3 : print ( '\u8f93\u51fa1\uff1a %d >3' % ( x )) x += 1 print ( '\u8f93\u51fa2\uff1ax= %d ' % ( x )) if x > 5 : print ( '\u8f93\u51fa3\uff1a %d >5' % ( x )) x += 1 print ( '\u8f93\u51fa4\uff1ax= %d ' % ( x )) #\u52a0\u4e86else\u9009\u62e9\u7b26\u5408\u7684\u4ee3\u7801\u6bb5\u6267\u884c if x > 3 : print ( '\u8f93\u51fa5\uff1a %d >3' % ( x )) x -= 6 print ( '\u8f93\u51fa6\uff1ax= %d ' % ( x )) else : print ( '\u8f93\u51fa7\uff1a %d <3' % ( x )) x += 6 print ( '\u8f93\u51fa8\uff1ax= %d ' % ( x )) #else if\u5728python\u7b80\u5199\u4e3aelif if x > 3 : print ( '\u8f93\u51fa9\uff1a %d >3' % ( x )) x -= 6 print ( '\u8f93\u51fa10\uff1ax= %d ' % ( x )) elif x < 2 : print ( '\u8f93\u51fa11\uff1a %d <2' % ( x )) x += 6 print ( '\u8f93\u51fa12\uff1ax= %d ' % ( x )) else : print ( '\u8f93\u51fa13\uff1a2<= %d <=3' % ( x )) x += 6 print ( '\u8f93\u51fa14\uff1ax= %d ' % ( x )) 1 2 3 4 5 6 7 8 \u8f93\u51fa1\uff1a5>3 \u8f93\u51fa2\uff1ax=6 \u8f93\u51fa3\uff1a6>5 \u8f93\u51fa4\uff1ax=7 \u8f93\u51fa5\uff1a7>3 \u8f93\u51fa6\uff1ax=1 \u8f93\u51fa11\uff1a1<2 \u8f93\u51fa12\uff1ax=7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #else if\u4f1a\u683c\u5f0f\u9519\u8bef x = 5 if x > 3 : print ( '\u8f93\u51fa9\uff1a %d >3' % ( x )) x -= 6 print ( '\u8f93\u51fa10\uff1ax= %d ' % ( x )) else if x < 2 : print ( '\u8f93\u51fa11\uff1a %d <2' % ( x )) x += 6 print ( '\u8f93\u51fa12\uff1ax= %d ' % ( x )) else : print ( '\u8f93\u51fa13\uff1a2<= %d <=3' % ( x )) x += 6 print ( '\u8f93\u51fa14\uff1ax= %d ' % ( x )) 1 2 3 4 File \"<ipython-input-19-421847da3eba>\", line 7 else if x<2: ^ SyntaxError: invalid syntax 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #\u683c\u5916\u9700\u8981\u6ce8\u91cd\u7f29\u8fdb\u4e00\u81f4\uff01\uff01\uff01\u5426\u5219\u4e0d\u4f1a\u88ab\u5f53\u505aif\u8bed\u53e5\u5757\u7684\u5185\u5bb9\u800c\u662fmain\u51fd\u6570\u7684\u5185\u5bb9 x = 5 #\u5982\u679c\u4e0d\u52a0else\u6240\u6709if\u4f9d\u6b21\u6267\u884c if x > 3 : print ( '\u8f93\u51fa1\uff1a %d >3' % ( x )) x += 1 print ( '\u8f93\u51fa2\uff1ax= %d ' % ( x )) if x > 5 : print ( '\u8f93\u51fa3\uff1a %d >5' % ( x )) x += 1 print ( '\u8f93\u51fa4\uff1ax= %d ' % ( x )) #\u52a0\u4e86else\u9009\u62e9\u7b26\u5408\u7684\u4ee3\u7801\u6bb5\u6267\u884c if x > 3 : print ( '\u8f93\u51fa5\uff1a %d >3' % ( x )) x -= 6 print ( '\u8f93\u51fa6\uff1ax= %d ' % ( x )) else : print ( '\u8f93\u51fa7\uff1a %d <3' % ( x )) x += 6 print ( '\u8f93\u51fa8\uff1ax= %d ' % ( x )) #else if\u5728python\u7b80\u5199\u4e3aelif if x > 3 : print ( '\u8f93\u51fa9\uff1a %d >3' % ( x )) x -= 6 print ( '\u8f93\u51fa10\uff1ax= %d ' % ( x )) elif x < 2 : print ( '\u8f93\u51fa11\uff1a %d <2' % ( x )) x += 6 print ( '\u8f93\u51fa12\uff1ax= %d ' % ( x )) else : print ( '\u8f93\u51fa13\uff1a2<= %d <=3' % ( x )) x += 6 print ( '\u8f93\u51fa14\uff1ax= %d ' % ( x )) 1 2 3 4 5 6 7 8 9 10 \u8f93\u51fa1\uff1a5>3 \u8f93\u51fa2\uff1ax=6 \u8f93\u51fa3\uff1a6>5 \u8f93\u51fa4\uff1ax=7 \u8f93\u51fa5\uff1a7>3 \u8f93\u51fa6\uff1ax=1 \u8f93\u51fa8\uff1ax=7 \u8f93\u51fa9\uff1a7>3 \u8f93\u51fa10\uff1ax=1 \u8f93\u51fa14\uff1ax=7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #if\u8bed\u53e5\u5757\u4e2d\u7f29\u8fdb\u4e0d\u5bf9\uff0c\u4e5f\u4f1a\u51fa\u73b0\u683c\u5f0f\u9519\u8bef\uff08elif\u524d\u6ca1\u6709if\uff09 x = 5 if x > 3 : print ( '\u8f93\u51fa9\uff1a %d >3' % ( x )) x -= 6 print ( '\u8f93\u51fa10\uff1ax= %d ' % ( x )) elif x < 2 : print ( '\u8f93\u51fa11\uff1a %d <2' % ( x )) x += 6 print ( '\u8f93\u51fa12\uff1ax= %d ' % ( x )) else : print ( '\u8f93\u51fa13\uff1a2<= %d <=3' % ( x )) x += 6 print ( '\u8f93\u51fa14\uff1ax= %d ' % ( x )) 1 2 3 4 File \"<ipython-input-21-e776facb8e49>\", line 7 elif x<2: ^ SyntaxError: invalid syntax 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #\u7f29\u8fdb\u4e0d\u4e00\u81f4\uff0c\u4f1a\u62a5\u7f29\u8fdb\u9519\u8bef x = 5 if x > 3 : print ( '\u8f93\u51fa9\uff1a %d >3' % ( x )) x -= 6 print ( '\u8f93\u51fa10\uff1ax= %d ' % ( x )) elif x < 2 : print ( '\u8f93\u51fa11\uff1a %d <2' % ( x )) x += 6 print ( '\u8f93\u51fa12\uff1ax= %d ' % ( x )) else : print ( '\u8f93\u51fa13\uff1a2<= %d <=3' % ( x )) x += 6 print ( '\u8f93\u51fa14\uff1ax= %d ' % ( x )) 1 2 3 4 File \"<ipython-input-22-9c0c4799b2e2>\", line 5 x-=6 ^ IndentationError: unexpected indent python\u6ca1\u6709switch\u8bed\u53e5\u5757\uff0c\u9700\u8981\u7528if\u2026\u2026elif\u2026\u2026else\u66ff\u4ee3 1 2 switch ( x ): case 1 : break ; 1 2 3 4 File \"<ipython-input-23-fed740f67d10>\", line 1 switch(x): ^ SyntaxError: invalid syntax","title":"2.1.4 \u8bed\u53e5\u5757"},{"location":"sjhnb/#22-while","text":"python\u4e2dwhile\u8bed\u53e5\u548cc/c++\u51e0\u4e4e\u4e00\u81f4 1 2 3 4 5 6 7 #\u5e38\u89c1\u9519\u8bef\uff0c\u6d6e\u70b9\u6570\u548c\u6574\u6570\u6bd4\u76f8\u7b49\u5bb9\u6613\u4f1a\u65e0\u9650\u5faa\u73af x = 2.0 while x != 1 : print ( x ) x -= 0.1 if ( x <- 1 ): break 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 2.0 1.9 1.7999999999999998 1.6999999999999997 1.5999999999999996 1.4999999999999996 1.3999999999999995 1.2999999999999994 1.1999999999999993 1.0999999999999992 0.9999999999999992 0.8999999999999992 0.7999999999999993 0.6999999999999993 0.5999999999999993 0.49999999999999933 0.39999999999999936 0.2999999999999994 0.19999999999999937 0.09999999999999937 -6.38378239159465e-16 -0.10000000000000064 -0.20000000000000065 -0.30000000000000066 -0.4000000000000007 -0.5000000000000007 -0.6000000000000006 -0.7000000000000006 -0.8000000000000006 -0.9000000000000006 1 2 3 4 5 6 7 #\u53ea\u6709\u8fd9\u79cd\u60c5\u51b5\u4e0b\u624d\u4e0d\u4f1a\u5728\u7cbe\u5ea6\u51fa\u95ee\u9898 x = 10.0 while x != 1 : print ( x ) x -= 1 if ( x <- 1 ): break 1 2 3 4 5 6 7 8 9 10.0 9.0 8.0 7.0 6.0 5.0 4.0 3.0 2.0 1 2 3 #python3.8\u65b0\u589e\uff1a\u6d77\u8c61\u8868\u8fbe\u5f0f,\u53ef\u4ee5\u8d4b\u503c\u7684\u540c\u65f6\u8fdb\u884c\u6bd4\u8f83\u8fd0\u7b97\u548c\u5224\u7b49\u8fd0\u7b97 while ( x := int ( input ())) < 9 : print ( '\u8f93\u5165\u7684\u662f {} ' . format ( x )) #\u683c\u5f0f\u5316\u8f93\u51fa\u7684\u53e6\u4e00\u4e2a\u683c\u5f0f\uff0c\u8c03\u7528\u5b57\u7b26\u4e32\u7684format\u51fd\u6570 1 2 3 4 5 6 7 8 9 1 \u8f93\u5165\u7684\u662f1 3 \u8f93\u5165\u7684\u662f3 5 \u8f93\u5165\u7684\u662f5 7 \u8f93\u5165\u7684\u662f7 9 1 2 3 4 5 6 7 #\u6ca1\u6709\u6d77\u8c61\u8868\u8fbe\u5f0f\uff0c\u5f97\u8fd9\u4e48\u5199 x = int ( input ()) while x < 9 : print ( '\u8f93\u5165\u7684\u662f {xx} ' . format ( xx = x )) #format\u53ef\u4ee5\u5728\u62ec\u53f7\u91cc\u5199\u4e0a\u6a21\u677f\u540d\u5b57 print ( '\u8f93\u5165\u7684\u662f {xx} \uff0cx**2= {yy} ,x= {xx} ' . format ( xx = x , yy = x ** 2 )) #\u5982\u679c\u6709\u591a\u5904\u9700\u8981\u8f93\u51fa\u4e00\u6837\u7684\u5185\u5bb9\uff0c\u63a8\u8350\u4f7f\u7528\u6a21\u677f print ( '\u8f93\u5165\u7684\u662f {} \uff0cx**2= {} ,x= {} ' . format ( x , x ** 2 , x )) #\u4e0e\u4e0a\u9762\u7b49\u4ef7 x = int ( input ()) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 1 \u8f93\u5165\u7684\u662f1 \u8f93\u5165\u7684\u662f1\uff0cx**2=1,x=1 \u8f93\u5165\u7684\u662f1\uff0cx**2=1,x=1 3 \u8f93\u5165\u7684\u662f3 \u8f93\u5165\u7684\u662f3\uff0cx**2=9,x=3 \u8f93\u5165\u7684\u662f3\uff0cx**2=9,x=3 5 \u8f93\u5165\u7684\u662f5 \u8f93\u5165\u7684\u662f5\uff0cx**2=25,x=5 \u8f93\u5165\u7684\u662f5\uff0cx**2=25,x=5 7 \u8f93\u5165\u7684\u662f7 \u8f93\u5165\u7684\u662f7\uff0cx**2=49,x=7 \u8f93\u5165\u7684\u662f7\uff0cx**2=49,x=7 9","title":"2.2 while\u8bed\u53e5"},{"location":"sjhnb/#23-for","text":"1 2 3 4 x , y = 1 , 1 for i in range ( 20 ): #\u7c7b\u4f3c\u4e8ejava\u7684\u9ad8\u7ea7for\u5faa\u73af\uff0c\u7b49\u4ef7\u4e8erange(0,20,1) print ( x , end = ' ' ) #\u63a7\u5236\u4ee5' '\u4e3a\u8f93\u51fa\u7ed3\u675f\u7b26\uff0c\u9ed8\u8ba4\u4e3a'\\n' x , y = y , x + y 1 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 1 2 3 4 #range(a,b,c)\u51fd\u6570\u901a\u5e38\u7528\u4e8e\u8fed\u4ee3\uff0c\u751f\u6210\u8d77\u59cb\u4f4da(\u53d6\u5f97\u5230a\uff0c\u9ed8\u8ba4\u4e3a0)\uff0c\u7ec8\u6b62\u4e3ab(\u53d6\u4e0d\u5230b)\uff0c\u6b65\u957f\u4e3ac\uff08\u9ed8\u8ba4\u4e3a1\uff0c\u53ef\u4ee5\u4e3a\u8d1f\u6570\uff09\u7684\u4e00\u7cfb\u5217\u6574\u578b #\u5b9e\u578b\u9700\u8981\u7528\u5230numpy\u5e93\u800c\u84dd\u6865\u676f\u4e0d\u5141\u8bb8 for i in range ( 21 , 1 , - 2 ): print ( i , end = ',' ) #\u63a7\u5236\u4ee5','\u4e3a\u8f93\u51fa\u7ed3\u675f\u7b26\uff0c\u9ed8\u8ba4\u4e3a'\\n' 1 21,19,17,15,13,11,9,7,5,3, 1 2 3 4 #\u7528\u5217\u8868\u63a8\u5bfc\u5f0f\u751f\u621010*10\u7684\u968f\u673a\u77e9\u9635 import random lst = [[ random . randint ( 0 , 20 ) for i in range ( 10 )] for j in range ( 10 )] lst 1 2 3 4 5 6 7 8 9 10 [[6, 7, 0, 16, 3, 16, 20, 12, 15, 11], [17, 4, 0, 5, 3, 19, 3, 2, 10, 11], [0, 2, 4, 10, 0, 16, 7, 2, 20, 9], [9, 2, 17, 19, 1, 5, 18, 3, 7, 7], [15, 0, 16, 7, 14, 5, 14, 18, 12, 20], [2, 11, 17, 19, 7, 14, 18, 20, 9, 7], [8, 15, 14, 5, 15, 10, 15, 14, 6, 1], [19, 9, 3, 1, 6, 13, 8, 1, 18, 20], [9, 17, 6, 8, 12, 13, 20, 11, 19, 20], [11, 9, 14, 20, 9, 8, 9, 1, 19, 18]] 1 2 3 4 for i in lst : for j in i : print ( ' %2d ' % j , end = ' ' ) print () #\u8f93\u51fa'\\n',\u7b49\u4ef7\u4e8ec\u8bed\u8a00\u7684puts(\"\") 1 2 3 4 5 6 7 8 9 10 6 7 0 16 3 16 20 12 15 11 17 4 0 5 3 19 3 2 10 11 0 2 4 10 0 16 7 2 20 9 9 2 17 19 1 5 18 3 7 7 15 0 16 7 14 5 14 18 12 20 2 11 17 19 7 14 18 20 9 7 8 15 14 5 15 10 15 14 6 1 19 9 3 1 6 13 8 1 18 20 9 17 6 8 12 13 20 11 19 20 11 9 14 20 9 8 9 1 19 18 1 2 3 4 5 #\u5982\u679c\u60f3\u8981\u901a\u8fc7\u4e0b\u6807\u7684\u65b9\u5f0f\u6765\u7d22\u5f15\u4e8c\u7ef4\u6570\u7ec4\uff0c\u9700\u8981\u8fd9\u6837\u5199 for i in range ( len ( lst )): for j in range ( len ( lst [ i ])): print ( ' %2d ' % lst [ i ][ j ], end = ' ' ) print () #\u8f93\u51fa'\\n',\u7b49\u4ef7\u4e8ec\u8bed\u8a00\u7684puts(\"\") 1 2 3 4 5 6 7 8 9 10 6 7 0 16 3 16 20 12 15 11 17 4 0 5 3 19 3 2 10 11 0 2 4 10 0 16 7 2 20 9 9 2 17 19 1 5 18 3 7 7 15 0 16 7 14 5 14 18 12 20 2 11 17 19 7 14 18 20 9 7 8 15 14 5 15 10 15 14 6 1 19 9 3 1 6 13 8 1 18 20 9 17 6 8 12 13 20 11 19 20 11 9 14 20 9 8 9 1 19 18 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #\u8f93\u51fa\u5b57\u5178\u7684\u952e\u503c\u5bf9\u5173\u7cfb stock = { '10005' : { 'name' : 'Conference Pears Loose' , 'price' : 2.00 , 'unit' : 'kg' , 'promotion' : None , 'group' : None , 'amount' : 1.550 }, '10013' : { 'name' : 'Emmental Slices 250G' , 'price' : 1.75 , 'unit' : 'pieces' , 'promotion' : 'get2pay1' , 'group' : None , 'amount' : 9 }, '10015' : { 'name' : 'Diced Beef 400G' , 'price' : 4.50 , 'unit' : 'pieces' , 'promotion' : 'get4pay3' , 'group' : 4 , 'amount' : 14 }, } for key , value in stock . items (): print ( key , end = ': \\n ' ) for innerkey , innervalue in stock [ key ] . items (): #\u5b57\u5178\u53ef\u4ee5\u901a\u8fc7key\u6765\u7d22\u5f15 print ( innerkey , innervalue , sep = ':' ) #\u7528\u5192\u53f7\u9694\u5f00key\u548cvalue\u7684\u5185\u5bb9\uff0csep\u8868\u793a\u8f93\u51fa\u5185\u5bb9\u4e4b\u95f4\u4ee5\u4ec0\u4e48\u9694\u5f00\uff0c\u9ed8\u8ba4\u662f' ' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 10005: name:Conference Pears Loose price:2.0 unit:kg promotion:None group:None amount:1.55 10013: name:Emmental Slices 250G price:1.75 unit:pieces promotion:get2pay1 group:None amount:9 10015: name:Diced Beef 400G price:4.5 unit:pieces promotion:get4pay3 group:4 amount:14","title":"2.3 for\u8bed\u53e5"}]}